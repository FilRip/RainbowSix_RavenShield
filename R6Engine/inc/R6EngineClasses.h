/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#ifndef R6ENGINE_API
#define R6ENGINE_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern R6ENGINE_API FName R6ENGINE_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif

AUTOGENERATE_NAME(PostRender)
AUTOGENERATE_NAME(R6MakeMovementNoise)
AUTOGENERATE_NAME(GetFiringStartPoint)
AUTOGENERATE_NAME(SetRotationOffset)
AUTOGENERATE_NAME(SetPeekingInfo)
AUTOGENERATE_NAME(SetCrouchBlend)
AUTOGENERATE_NAME(IsPeekingLeft)
AUTOGENERATE_NAME(StartFluidPeeking)
AUTOGENERATE_NAME(StartFullPeeking)
AUTOGENERATE_NAME(EndPeekingMode)
AUTOGENERATE_NAME(IsFullPeekingOver)
AUTOGENERATE_NAME(PlayPeekingAnim)
AUTOGENERATE_NAME(PlayFluidPeekingAnim)
AUTOGENERATE_NAME(PlayCrouchToProne)
AUTOGENERATE_NAME(PlayProneToCrouch)
AUTOGENERATE_NAME(StartCrawl)
AUTOGENERATE_NAME(EndCrawl)
AUTOGENERATE_NAME(PotentialOpenDoor)
AUTOGENERATE_NAME(RemovePotentialOpenDoor)
AUTOGENERATE_NAME(AdjustPawnForDiagonalStrafing)
AUTOGENERATE_NAME(ResetDiagonalStrafing)
AUTOGENERATE_NAME(TurnToFaceActor)
AUTOGENERATE_NAME(R6ResetLookDirection)
AUTOGENERATE_NAME(PlaySurfaceSwitch)
AUTOGENERATE_NAME(GetStanceReticuleModifier)
AUTOGENERATE_NAME(EndOfGrenadeEffect)
AUTOGENERATE_NAME(PlaySpecialPendingAction)
AUTOGENERATE_NAME(SpawnRagDoll)
AUTOGENERATE_NAME(InitBiPodPosture)
AUTOGENERATE_NAME(ResetBipodPosture)
AUTOGENERATE_NAME(UpdateBipodPosture)
AUTOGENERATE_NAME(FinishInitialization)
AUTOGENERATE_NAME(SetAnimInfo)
AUTOGENERATE_NAME(GotoStand)
AUTOGENERATE_NAME(GotoCrouch)
AUTOGENERATE_NAME(GotoKneel)
AUTOGENERATE_NAME(GotoFoetus)
AUTOGENERATE_NAME(GotoProne)
AUTOGENERATE_NAME(SetPotentialClimber)
AUTOGENERATE_NAME(PlayerTeamSelectionReceived)
AUTOGENERATE_NAME(GetZoomMultiplyFactor)
AUTOGENERATE_NAME(ClientPlayVoices)
AUTOGENERATE_NAME(R6SetMovement)
AUTOGENERATE_NAME(CanOpenDoor)
AUTOGENERATE_NAME(OpenDoorFailed)
AUTOGENERATE_NAME(AttackTimer)
AUTOGENERATE_NAME(StopAttack)
AUTOGENERATE_NAME(GotoPointAndSearch)
AUTOGENERATE_NAME(GotoPointToAttack)
AUTOGENERATE_NAME(GotoStateEngageByThreat)
AUTOGENERATE_NAME(SetNewDamageState)
AUTOGENERATE_NAME(UpdateTeamFormation)
AUTOGENERATE_NAME(RequestFormationChange)
AUTOGENERATE_NAME(SequenceChanged)
AUTOGENERATE_NAME(SequenceFinished)
AUTOGENERATE_NAME(AnimFinished)
AUTOGENERATE_NAME(PlaySpecialAnim)
AUTOGENERATE_NAME(LoopSpecialAnim)
AUTOGENERATE_NAME(StopSpecialAnim)

#ifndef NAMES_ONLY

#define UCONST_m_MapLength 32

class R6ENGINE_API AR6GameReplicationInfo : public AGameReplicationInfo
{
public:
    INT m_iDeathCameraMode;
    INT m_iCurrGameType;
    INT m_MaxPlayers;
    INT m_iCurrentRound;
    INT m_iRoundsPerMatch;
    INT m_iDiffLevel;
    INT m_iNbOfTerro;
    INT m_iMenuCountDownTime;
    INT m_aTeamScore[2];
    INT c_iTeamNumBravo;
    BITFIELD bShowLog:1 GCC_PACK(4);
    BITFIELD m_bPasswordReq:1;
    BITFIELD m_bAdminPasswordReq:1;
    BITFIELD m_bFriendlyFire:1;
    BITFIELD m_bAutoBalance:1;
    BITFIELD m_bTKPenalty:1;
    BITFIELD m_bMenuTKPenaltySetting:1;
    BITFIELD m_bShowNames:1;
    BITFIELD m_bInternetSvr:1;
    BITFIELD m_bFFPWeapon:1;
    BITFIELD m_bDedicatedSvr:1;
    BITFIELD m_bAIBkp:1;
    BITFIELD m_bRotateMap:1;
    BITFIELD m_bPunkBuster:1;
    BITFIELD m_bRepMenuCountDownTimePaused:1;
    BITFIELD m_bRepMenuCountDownTimeUnlimited:1;
    BITFIELD m_bIsWritableMapAllowed:1;
    FLOAT m_fTimeBetRounds GCC_PACK(4);
    FLOAT m_fBombTime;
    FLOAT m_fRepMenuCountDownTime;
    FLOAT m_fRepMenuCountDownTimeLastUpdate;
    class AR6RainbowTeam* m_RainbowTeam[3];
    class UR6GameMenuCom* m_MenuCommunication;
    FStringNoInit m_mapArray[32];
    FStringNoInit m_gameModeArray[32];
    FStringNoInit m_szSubMachineGunsRes[32];
    FStringNoInit m_szShotGunRes[32];
    FStringNoInit m_szAssRifleRes[32];
    FStringNoInit m_szMachGunRes[32];
    FStringNoInit m_szSnipRifleRes[32];
    FStringNoInit m_szPistolRes[32];
    FStringNoInit m_szMachPistolRes[32];
    FStringNoInit m_szGadgPrimaryRes[32];
    FStringNoInit m_szGadgSecondayRes[32];
    FStringNoInit m_szGadgMiscRes[32];
    DECLARE_CLASS(AR6GameReplicationInfo,AGameReplicationInfo,0|CLASS_Config,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6GameReplicationInfo)
};

enum EPendingAction
{
    PENDING_None            =0,
    PENDING_Coughing        =1,
    PENDING_StopCoughing    =2,
    PENDING_Blinded         =3,
    PENDING_OpenDoor        =4,
    PENDING_StartClimbingLadder=5,
    PENDING_PostStartClimbingLadder=6,
    PENDING_EndClimbingLadder=7,
    PENDING_PostEndClimbingLadder=8,
    PENDING_DropWeapon      =9,
    PENDING_ProneToCrouch   =10,
    PENDING_CrouchToProne   =11,
    PENDING_MoveHitBone     =12,
    PENDING_StartClimbingObject=13,
    PENDING_PostStartClimbingObject=14,
    PENDING_SetRemoteCharge =15,
    PENDING_SetBreachingCharge=16,
    PENDING_SetClaymore     =17,
    PENDING_InteractWithDevice=18,
    PENDING_LockPickDoor    =19,
    PENDING_ComFollowMe     =20,
    PENDING_ComCover        =21,
    PENDING_ComGo           =22,
    PENDING_ComRegroup      =23,
    PENDING_ComHold         =24,
    PENDING_ActivateNightVision=25,
    PENDING_DeactivateNightVision=26,
    PENDING_SecureWeapon    =27,
    PENDING_EquipWeapon     =28,
    PENDING_SecureTerrorist =29,
    PENDING_ThrowGrenade    =30,
    PENDING_Surrender       =31,
    PENDING_Kneeling        =32,
    PENDING_Arrest          =33,
    PENDING_CallBackup      =34,
    PENDING_SpecialAnim     =35,
    PENDING_LoopSpecialAnim =36,
    PENDING_StopSpecialAnim =37,
    PENDING_HostageAnim     =38,
    PENDING_EndSurrender    =39,
    PENDING_StartSurrender  =40,
    PENDING_PostEndSurrender=41,
    PENDING_SetFree         =42,
    PENDING_ArrestKneel     =43,
    PENDING_ArrestWaiting   =44,
    PENDING_EndArrest       =45,
    PENDING_MAX             =46,
};
enum eHands
{
    HANDS_None              =0,
    HANDS_Right             =1,
    HANDS_Left              =2,
    HANDS_Both              =3,
    HANDS_MAX               =4,
};
enum eDeviceAnimToPlay
{
    BA_ArmBomb              =0,
    BA_DisarmBomb           =1,
    BA_Keypad               =2,
    BA_PlantDevice          =3,
    BA_Keyboard             =4,
    BA_MAX                  =5,
};
enum EHostagePersonality
{
    HPERSO_Coward           =0,
    HPERSO_Normal           =1,
    HPERSO_Brave            =2,
    HPERSO_Bait             =3,
    HPERSO_None             =4,
    HPERSO_MAX              =5,
};
enum eBodyPart
{
    BP_Head                 =0,
    BP_Chest                =1,
    BP_Abdomen              =2,
    BP_Legs                 =3,
    BP_Arms                 =4,
    BP_MAX                  =5,
};
enum eArmor
{
    ARMOR_None              =0,
    ARMOR_Light             =1,
    ARMOR_Medium            =2,
    ARMOR_Heavy             =3,
    ARMOR_MAX               =4,
};
enum EHeadAttachmentType
{
    ATTACH_Glasses          =0,
    ATTACH_Sunglasses       =1,
    ATTACH_GasMask          =2,
    ATTACH_None             =3,
    ATTACH_MAX              =4,
};
enum ETerroristType
{
    TTYPE_B1T1              =0,
    TTYPE_B1T3              =1,
    TTYPE_B2T2              =2,
    TTYPE_B2T4              =3,
    TTYPE_M1T1              =4,
    TTYPE_M1T3              =5,
    TTYPE_M2T2              =6,
    TTYPE_M2T4              =7,
    TTYPE_P1T1              =8,
    TTYPE_P2T2              =9,
    TTYPE_P3T3              =10,
    TTYPE_P1T4              =11,
    TTYPE_P2T5              =12,
    TTYPE_P3T6              =13,
    TTYPE_P1T7              =14,
    TTYPE_P2T8              =15,
    TTYPE_P3T9              =16,
    TTYPE_P1T10             =17,
    TTYPE_P2T11             =18,
    TTYPE_P3T12             =19,
    TTYPE_P4T13             =20,
    TTYPE_D1T1              =21,
    TTYPE_D1T2              =22,
    TTYPE_GOSP              =23,
    TTYPE_GUTI              =24,
    TTYPE_S1T1              =25,
    TTYPE_S1T2              =26,
    TTYPE_TXIC              =27,
    TTYPE_T1T1              =28,
    TTYPE_T2T2              =29,
    TTYPE_T1T3              =30,
    TTYPE_T2T4              =31,
    TTYPE_MAX               =32,
};
enum eMovementDirection
{
    MOVEDIR_Forward         =0,
    MOVEDIR_Backward        =1,
    MOVEDIR_Strafe          =2,
    MOVEDIR_MAX             =3,
};
enum eMovementPace
{
    PACE_None               =0,
    PACE_Prone              =1,
    PACE_CrouchWalk         =2,
    PACE_CrouchRun          =3,
    PACE_Walk               =4,
    PACE_Run                =5,
    PACE_MAX                =6,
};
enum eStrafeDirection
{
    STRAFE_None             =0,
    STRAFE_ForwardRight     =1,
    STRAFE_ForwardLeft      =2,
    STRAFE_BackwardRight    =3,
    STRAFE_BackwardLeft     =4,
    STRAFE_MAX              =5,
};
enum EWeaponSound
{
    WSOUND_None             =0,
    WSOUND_Initialize       =1,
    WSOUND_PlayTrigger      =2,
    WSOUND_PlayFireSingleShot=3,
    WSOUND_PlayFireEndSingleShot=4,
    WSOUND_PlayFireThreeBurst=5,
    WSOUND_PlayFireFullAuto =6,
    WSOUND_PlayEmptyMag     =7,
    WSOUND_PlayReloadEmpty  =8,
    WSOUND_PlayReload       =9,
    WSOUND_StopFireFullAuto =10,
    WSOUND_MAX              =11,
};
#define UCONST_C_fPeekLeftMax 0.0
#define UCONST_C_fPeekMiddleMax 1000.0
#define UCONST_C_fPeekRightMax 2000.0
#define UCONST_C_fPeekCrouchLeftMax 400.0
#define UCONST_C_fPeekCrouchRightMax 1600.0
#define UCONST_C_fPeekSpeedInMs 3000.0
#define UCONST_C_fPeekProneTime 120.0
#define UCONST_C_iRotationOffsetNormal 5461
#define UCONST_C_iRotationOffsetProne 3000
#define UCONST_C_iRotationOffsetBipod 5600
#define UCONST_C_NoiseTimerFrequency 0.33f
#define UCONST_C_iHeartRateMaxTerrorist 184
#define UCONST_C_iHeartRateMaxOther 182
#define UCONST_C_iHeartRateMinTerrorist 65
#define UCONST_C_iHeartRateMinOther 90
#define UCONST_C_iBaseAnimChannel 0
#define UCONST_C_iBaseBlendAnimChannel 1
#define UCONST_C_iPostureAnimChannel 12
#define UCONST_C_iPeekingAnimChannel 13
#define UCONST_C_iWeaponRightAnimChannel 14
#define UCONST_C_iWeaponLeftAnimChannel 15
#define UCONST_C_iPawnSpecificChannel 16
#define UCONST_C_fPrePivotStairOffset 5.0
#define UCONST_C_fHeadRadius 22.f
#define UCONST_C_fHeadHeight 26.f
#define UCONST_C_MaxPendingAction 5

struct AR6Pawn_eventUpdateBipodPosture_Parms
{
};
struct AR6Pawn_eventResetBipodPosture_Parms
{
};
struct AR6Pawn_eventInitBiPodPosture_Parms
{
    BITFIELD bEnable;
};
struct AR6Pawn_eventSpawnRagDoll_Parms
{
};
struct AR6Pawn_eventPlaySpecialPendingAction_Parms
{
    BYTE eAction;
};
struct AR6Pawn_eventEndOfGrenadeEffect_Parms
{
    BYTE eType;
};
struct AR6Pawn_eventGetStanceReticuleModifier_Parms
{
    FLOAT ReturnValue;
};
struct AR6Pawn_eventPlaySurfaceSwitch_Parms
{
};
struct AR6Pawn_eventR6ResetLookDirection_Parms
{
};
struct AR6Pawn_eventTurnToFaceActor_Parms
{
    class AActor* Target;
};
struct AR6Pawn_eventResetDiagonalStrafing_Parms
{
};
struct AR6Pawn_eventAdjustPawnForDiagonalStrafing_Parms
{
};
struct AR6Pawn_eventRemovePotentialOpenDoor_Parms
{
    class AR6Door* Door;
};
struct AR6Pawn_eventPotentialOpenDoor_Parms
{
    class AR6Door* Door;
};
struct AR6Pawn_eventEndCrawl_Parms
{
};
struct AR6Pawn_eventStartCrawl_Parms
{
};
struct AR6Pawn_eventPlayProneToCrouch_Parms
{
    BITFIELD bForcedByClient;
};
struct AR6Pawn_eventPlayCrouchToProne_Parms
{
    BITFIELD bForcedByClient;
};
struct AR6Pawn_eventPlayFluidPeekingAnim_Parms
{
    FLOAT fForwardPct;
    FLOAT fLeftPct;
    FLOAT fDeltaTime;
};
struct AR6Pawn_eventPlayPeekingAnim_Parms
{
    BITFIELD bUseSpecialPeekAnim;
};
struct AR6Pawn_eventIsFullPeekingOver_Parms
{
    BITFIELD ReturnValue;
};
struct AR6Pawn_eventEndPeekingMode_Parms
{
    BYTE eMode;
};
struct AR6Pawn_eventStartFullPeeking_Parms
{
};
struct AR6Pawn_eventStartFluidPeeking_Parms
{
};
struct AR6Pawn_eventIsPeekingLeft_Parms
{
    BITFIELD ReturnValue;
};
struct AR6Pawn_eventSetCrouchBlend_Parms
{
    FLOAT fCrouchBlend;
};
struct AR6Pawn_eventSetPeekingInfo_Parms
{
    BYTE eMode;
    FLOAT fPeeking;
    BITFIELD bPeekLeft;
};
struct AR6Pawn_eventSetRotationOffset_Parms
{
    INT iPitch;
    INT iYaw;
    INT iRoll;
};
struct AR6Pawn_eventGetFiringStartPoint_Parms
{
    FVector ReturnValue;
};
struct AR6Pawn_eventR6MakeMovementNoise_Parms
{
};
class R6ENGINE_API AR6Pawn : public AR6AbstractPawn
{
public:
    BYTE m_eMovementPace;
    BYTE m_ePendingAction[5];
    BYTE m_iNetCurrentActionIndex;
    BYTE m_iLocalCurrentActionIndex;
    BYTE m_ePlayerIsUsingHands;
    BYTE m_eDeviceAnim;
    BYTE m_eLastUsingHands;
    BYTE m_ePawnIsUsingHand;
    BYTE m_eArmorType;
    BYTE m_eOldPeekingMode;
    BYTE m_bSuicideType;
    BYTE m_eLastHitPart;
    BYTE m_eStrafeDirection;
    BYTE m_bRepPlayWaitAnim;
    BYTE m_bSavedPlayWaitAnim;
    BYTE m_byRemainingWaitZero;
    INT m_iPendingActionInt[5];
    INT m_iID;
    INT m_iPermanentID;
    INT m_iVisibilityTest;
    INT m_iForceKill;
    INT m_iForceStun;
    INT m_iMaxRotationOffset;
    INT m_iRepBipodRotationRatio;
    INT m_iLastBipodRotation;
    INT m_iUniqueID;
    INT m_hLipSynchData;
    INT m_iDesignRandomTweak;
    INT m_iDesignLightTweak;
    INT m_iDesignMediumTweak;
    INT m_iDesignHeavyTweak;
    BITFIELD m_bIsClimbingStairs:1 GCC_PACK(4);
    BITFIELD m_bIsMovingUpStairs:1;
    BITFIELD m_bIsClimbingLadder:1;
    BITFIELD m_bSlideEnd:1;
    BITFIELD m_bCanClimbObject:1;
    BITFIELD m_bOldCanWalkOffLedges:1;
    BITFIELD m_bActivateHeatVision:1;
    BITFIELD m_bActivateNightVision:1;
    BITFIELD m_bActivateScopeVision:1;
    BITFIELD m_bWeaponGadgetActivated:1;
    BITFIELD m_bIsKneeling:1;
    BITFIELD m_bIsSniping:1;
    BITFIELD m_bPlayingComAnimation:1;
    BITFIELD m_bDontKill:1;
    BITFIELD m_bPreviousAnimPlayOnce:1;
    BITFIELD m_bToggleServerCancelPlacingCharge:1;
    BITFIELD m_bOldServerCancelPlacingCharge:1;
    BITFIELD m_bReAttachToRightHand:1;
    BITFIELD m_bReloadingWeapon:1;
    BITFIELD m_bReloadAnimLoop:1;
    BITFIELD m_bChangingWeapon:1;
    BITFIELD m_bIsFiringState:1;
    BITFIELD m_bPawnIsReloading:1;
    BITFIELD m_bPawnIsChangingWeapon:1;
    BITFIELD m_bPawnReloadShotgunLoop:1;
    BITFIELD m_bPeekingReturnToCenter:1;
    BITFIELD m_bWasPeeking:1;
    BITFIELD m_bWasPeekingLeft:1;
    BITFIELD m_bAutoClimbLadders:1;
    BITFIELD m_bAim:1;
    BITFIELD m_bPostureTransition:1;
    BITFIELD m_bWeaponTransition:1;
    BITFIELD m_bPawnSpecificAnimInProgress:1;
    BITFIELD m_bSoundChangePosture:1;
    BITFIELD m_bNightVisionAnimation:1;
    BITFIELD m_bSuicided:1;
    BITFIELD m_bAvoidFacingWalls:1;
    BITFIELD m_bWallAdjustmentDone:1;
    BITFIELD m_bDontSeePlayer:1;
    BITFIELD m_bDontHearPlayer:1;
    BITFIELD m_bUseKarmaRagdoll:1;
    BITFIELD m_bTerroSawMeDead:1;
    BITFIELD m_bInteractingWithDevice:1;
    BITFIELD m_bCanDisarmBomb:1;
    BITFIELD m_bCanArmBomb:1;
    BITFIELD m_bUsingBipod:1;
    BITFIELD m_bLeftFootDown:1;
    BITFIELD m_bModifyBones:1;
    BITFIELD m_bHelmetWasHit:1;
    BITFIELD m_bMovingDiagonally:1;
    BITFIELD m_bEngaged:1;
    BITFIELD m_bHasArmPatches:1;
    BITFIELD m_bCanFireFriends:1;
    BITFIELD m_bCanFireNeutrals:1;
    BITFIELD m_bDesignToggleLog:1;
    FLOAT m_fSkillAssault GCC_PACK(4);
    FLOAT m_fSkillDemolitions;
    FLOAT m_fSkillElectronics;
    FLOAT m_fSkillSniper;
    FLOAT m_fSkillStealth;
    FLOAT m_fSkillSelfControl;
    FLOAT m_fSkillLeadership;
    FLOAT m_fSkillObservation;
    FLOAT m_fFallingHeight;
    FLOAT m_fWalkingSpeed;
    FLOAT m_fWalkingBackwardStrafeSpeed;
    FLOAT m_fRunningSpeed;
    FLOAT m_fRunningBackwardStrafeSpeed;
    FLOAT m_fCrouchedWalkingSpeed;
    FLOAT m_fCrouchedWalkingBackwardStrafeSpeed;
    FLOAT m_fCrouchedRunningSpeed;
    FLOAT m_fCrouchedRunningBackwardStrafeSpeed;
    FLOAT m_fProneSpeed;
    FLOAT m_fProneStrafeSpeed;
    FLOAT m_fLastValidPeeking;
    FLOAT m_fOldCrouchBlendRate;
    FLOAT m_fOldPeekBlendRate;
    FLOAT m_fPeekingGoalModifier;
    FLOAT m_fPeekingGoal;
    FLOAT m_fPeeking;
    FLOAT m_fWallCheckDistance;
    FLOAT m_fStunShakeTime;
    FLOAT m_fWeaponJump;
    FLOAT m_fZoomJumpReturn;
    FLOAT m_fNoiseTimer;
    FLOAT m_fLastFSPUpdate;
    FLOAT m_fLastVRPUpdate;
    FLOAT m_fBipodRotation;
    FLOAT m_fTimeStartBodyFallSound;
    FLOAT m_fFiringTimer;
    FLOAT m_fHBTime;
    FLOAT m_fHBMove;
    FLOAT m_fHBWound;
    FLOAT m_fHBDefcon;
    FLOAT m_fPrePivotLastUpdate;
    FLOAT m_fLeftDirtyFootStepRemainingTime;
    FLOAT m_fRightDirtyFootStepRemainingTime;
    FLOAT m_fTimeGrenadeEffectBeforeSound;
    class AR6AbstractBulletManager* m_pBulletManager;
    class AR6Ladder* m_Ladder;
    class AActor* m_potentialActionActor;
    class AR6Door* m_Door;
    class AR6Door* m_Door2;
    class AR6ClimbableObject* m_climbObject;
    class USound* m_sndNightVisionActivation;
    class USound* m_sndNightVisionDeactivation;
    class USound* m_sndCrouchToStand;
    class USound* m_sndStandToCrouch;
    class USound* m_sndThermalScopeActivation;
    class USound* m_sndThermalScopeDeactivation;
    class USound* m_sndDeathClothes;
    class USound* m_sndDeathClothesStop;
    class AR6AbstractCorpse* m_ragdoll;
    class AR6Pawn* m_KilledBy;
    class AActor* m_TrackActor;
    class AActor* m_FOV;
    class AEmitter* m_BreathingEmitter;
    class AR6ArmPatchGlow* m_ArmPatches[2];
    class AR6TeamMemberReplicationInfo* m_TeamMemberRepInfo;
    class AR6SoundReplicationInfo* m_SoundRepInfo;
    FName m_WeaponAnimPlaying;
    FName m_standRunForwardName;
    FName m_standRunLeftName;
    FName m_standRunBackName;
    FName m_standRunRightName;
    FName m_standWalkForwardName;
    FName m_standWalkBackName;
    FName m_standWalkLeftName;
    FName m_standWalkRightName;
    FName m_hurtStandWalkLeftName;
    FName m_hurtStandWalkRightName;
    FName m_standTurnLeftName;
    FName m_standTurnRightName;
    FName m_standFallName;
    FName m_standLandName;
    FName m_crouchFallName;
    FName m_crouchLandName;
    FName m_crouchWalkForwardName;
    FName m_standStairWalkUpName;
    FName m_standStairWalkUpBackName;
    FName m_standStairWalkUpRightName;
    FName m_standStairWalkDownName;
    FName m_standStairWalkDownBackName;
    FName m_standStairWalkDownRightName;
    FName m_standStairRunUpName;
    FName m_standStairRunUpBackName;
    FName m_standStairRunUpRightName;
    FName m_standStairRunDownName;
    FName m_standStairRunDownBackName;
    FName m_standStairRunDownRightName;
    FName m_crouchStairWalkDownName;
    FName m_crouchStairWalkDownBackName;
    FName m_crouchStairWalkDownRightName;
    FName m_crouchStairWalkUpName;
    FName m_crouchStairWalkUpBackName;
    FName m_crouchStairWalkUpRightName;
    FName m_crouchStairRunUpName;
    FName m_crouchStairRunDownName;
    FName m_crouchDefaultAnimName;
    FName m_standDefaultAnimName;
    FName m_standClimb64DefaultAnimName;
    FName m_standClimb96DefaultAnimName;
    class UClass* m_FOVClass;
    class UClass* m_LeftDirtyFootStep;
    class UClass* m_RightDirtyFootStep;
    FVector m_vStairDirection;
    FRotator m_rHitDirection;
    FRotator m_rPrevRotationOffset;
    FVector m_vFiringStartPoint;
    FRotator m_rViewRotation;
    FRotator m_rRoot;
    FRotator m_rPelvis;
    FRotator m_rSpine;
    FRotator m_rSpine1;
    FRotator m_rSpine2;
    FRotator m_rNeck;
    FRotator m_rHead;
    FRotator m_rPonyTail1;
    FRotator m_rPonyTail2;
    FRotator m_rJaw;
    FRotator m_rLClavicle;
    FRotator m_rLUpperArm;
    FRotator m_rLForeArm;
    FRotator m_rLHand;
    FRotator m_rLFinger0;
    FRotator m_rRClavicle;
    FRotator m_rRUpperArm;
    FRotator m_rRForeArm;
    FRotator m_rRHand;
    FRotator m_rRFinger0;
    FRotator m_rLThigh;
    FRotator m_rLCalf;
    FRotator m_rLFoot;
    FRotator m_rLToe;
    FRotator m_rRThigh;
    FRotator m_rRCalf;
    FRotator m_rRFoot;
    FRotator m_rRToe;
    FVector m_vPrePivotProneBackup;
    DECLARE_FUNCTION(execSetAudioInfo);
    DECLARE_FUNCTION(execPlayVoices);
    DECLARE_FUNCTION(execSendPlaySound);
    DECLARE_FUNCTION(execPawnCanBeHurtFrom);
    DECLARE_FUNCTION(execGetRotationOffset);
    DECLARE_FUNCTION(execR6GetViewRotation);
    DECLARE_FUNCTION(execUpdatePawnTrackActor);
    DECLARE_FUNCTION(execPawnTrackActor);
    DECLARE_FUNCTION(execPawnLookAt);
    DECLARE_FUNCTION(execPawnLookAbsolute);
    DECLARE_FUNCTION(execPawnLook);
    DECLARE_FUNCTION(execFootStep);
    DECLARE_FUNCTION(execMoveHitBone);
    DECLARE_FUNCTION(execStopLipSynch);
    DECLARE_FUNCTION(execStartLipSynch);
    DECLARE_FUNCTION(execGetMovementDirection);
    DECLARE_FUNCTION(execGetMaxRotationOffset);
    DECLARE_FUNCTION(execGetPeekingRatioNorm);
    DECLARE_FUNCTION(execCheckCylinderTranslation);
    DECLARE_FUNCTION(execSetPawnScale);
    DECLARE_FUNCTION(execAdjustFluidCollisionCylinder);
    DECLARE_FUNCTION(execToggleScopeProperties);
    DECLARE_FUNCTION(execToggleNightProperties);
    DECLARE_FUNCTION(execToggleHeatProperties);
    DECLARE_FUNCTION(execGetThroughResult);
    DECLARE_FUNCTION(execGetStunResult);
    DECLARE_FUNCTION(execGetKillResult);
    void eventUpdateBipodPosture()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_UpdateBipodPosture),NULL);
    }
    void eventResetBipodPosture()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_ResetBipodPosture),NULL);
    }
    void eventInitBiPodPosture(BITFIELD bEnable)
    {
        AR6Pawn_eventInitBiPodPosture_Parms Parms;
        Parms.bEnable=bEnable;
        ProcessEvent(FindFunctionChecked(R6ENGINE_InitBiPodPosture),&Parms);
    }
    void eventSpawnRagDoll()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_SpawnRagDoll),NULL);
    }
    void eventPlaySpecialPendingAction(BYTE eAction)
    {
        AR6Pawn_eventPlaySpecialPendingAction_Parms Parms;
        Parms.eAction=eAction;
        ProcessEvent(FindFunctionChecked(R6ENGINE_PlaySpecialPendingAction),&Parms);
    }
    void eventEndOfGrenadeEffect(BYTE eType)
    {
        AR6Pawn_eventEndOfGrenadeEffect_Parms Parms;
        Parms.eType=eType;
        ProcessEvent(FindFunctionChecked(R6ENGINE_EndOfGrenadeEffect),&Parms);
    }
    FLOAT eventGetStanceReticuleModifier()
    {
        AR6Pawn_eventGetStanceReticuleModifier_Parms Parms;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(R6ENGINE_GetStanceReticuleModifier),&Parms);
        return Parms.ReturnValue;
    }
    void eventPlaySurfaceSwitch()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_PlaySurfaceSwitch),NULL);
    }
    void eventR6ResetLookDirection()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_R6ResetLookDirection),NULL);
    }
    void eventTurnToFaceActor(class AActor* Target)
    {
        AR6Pawn_eventTurnToFaceActor_Parms Parms;
        Parms.Target=Target;
        ProcessEvent(FindFunctionChecked(R6ENGINE_TurnToFaceActor),&Parms);
    }
    void eventResetDiagonalStrafing()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_ResetDiagonalStrafing),NULL);
    }
    void eventAdjustPawnForDiagonalStrafing()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_AdjustPawnForDiagonalStrafing),NULL);
    }
    void eventRemovePotentialOpenDoor(class AR6Door* Door)
    {
        AR6Pawn_eventRemovePotentialOpenDoor_Parms Parms;
        Parms.Door=Door;
        ProcessEvent(FindFunctionChecked(R6ENGINE_RemovePotentialOpenDoor),&Parms);
    }
    void eventPotentialOpenDoor(class AR6Door* Door)
    {
        AR6Pawn_eventPotentialOpenDoor_Parms Parms;
        Parms.Door=Door;
        ProcessEvent(FindFunctionChecked(R6ENGINE_PotentialOpenDoor),&Parms);
    }
    void eventEndCrawl()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_EndCrawl),NULL);
    }
    void eventStartCrawl()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_StartCrawl),NULL);
    }
    void eventPlayProneToCrouch(BITFIELD bForcedByClient)
    {
        AR6Pawn_eventPlayProneToCrouch_Parms Parms;
        Parms.bForcedByClient=bForcedByClient;
        ProcessEvent(FindFunctionChecked(R6ENGINE_PlayProneToCrouch),&Parms);
    }
    void eventPlayCrouchToProne(BITFIELD bForcedByClient)
    {
        AR6Pawn_eventPlayCrouchToProne_Parms Parms;
        Parms.bForcedByClient=bForcedByClient;
        ProcessEvent(FindFunctionChecked(R6ENGINE_PlayCrouchToProne),&Parms);
    }
    void eventPlayFluidPeekingAnim(FLOAT fForwardPct, FLOAT fLeftPct, FLOAT fDeltaTime)
    {
        AR6Pawn_eventPlayFluidPeekingAnim_Parms Parms;
        Parms.fForwardPct=fForwardPct;
        Parms.fLeftPct=fLeftPct;
        Parms.fDeltaTime=fDeltaTime;
        ProcessEvent(FindFunctionChecked(R6ENGINE_PlayFluidPeekingAnim),&Parms);
    }
    void eventPlayPeekingAnim(BITFIELD bUseSpecialPeekAnim)
    {
        AR6Pawn_eventPlayPeekingAnim_Parms Parms;
        Parms.bUseSpecialPeekAnim=bUseSpecialPeekAnim;
        ProcessEvent(FindFunctionChecked(R6ENGINE_PlayPeekingAnim),&Parms);
    }
    BITFIELD eventIsFullPeekingOver()
    {
        AR6Pawn_eventIsFullPeekingOver_Parms Parms;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(R6ENGINE_IsFullPeekingOver),&Parms);
        return Parms.ReturnValue;
    }
    void eventEndPeekingMode(BYTE eMode)
    {
        AR6Pawn_eventEndPeekingMode_Parms Parms;
        Parms.eMode=eMode;
        ProcessEvent(FindFunctionChecked(R6ENGINE_EndPeekingMode),&Parms);
    }
    void eventStartFullPeeking()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_StartFullPeeking),NULL);
    }
    void eventStartFluidPeeking()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_StartFluidPeeking),NULL);
    }
    BITFIELD eventIsPeekingLeft()
    {
        AR6Pawn_eventIsPeekingLeft_Parms Parms;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(R6ENGINE_IsPeekingLeft),&Parms);
        return Parms.ReturnValue;
    }
    void eventSetCrouchBlend(FLOAT fCrouchBlend)
    {
        AR6Pawn_eventSetCrouchBlend_Parms Parms;
        Parms.fCrouchBlend=fCrouchBlend;
        ProcessEvent(FindFunctionChecked(R6ENGINE_SetCrouchBlend),&Parms);
    }
    void eventSetPeekingInfo(BYTE eMode, FLOAT fPeeking, BITFIELD bPeekLeft)
    {
        AR6Pawn_eventSetPeekingInfo_Parms Parms;
        Parms.eMode=eMode;
        Parms.fPeeking=fPeeking;
        Parms.bPeekLeft=bPeekLeft;
        ProcessEvent(FindFunctionChecked(R6ENGINE_SetPeekingInfo),&Parms);
    }
    void eventSetRotationOffset(INT iPitch, INT iYaw, INT iRoll)
    {
        AR6Pawn_eventSetRotationOffset_Parms Parms;
        Parms.iPitch=iPitch;
        Parms.iYaw=iYaw;
        Parms.iRoll=iRoll;
        ProcessEvent(FindFunctionChecked(R6ENGINE_SetRotationOffset),&Parms);
    }
    FVector eventGetFiringStartPoint()
    {
        AR6Pawn_eventGetFiringStartPoint_Parms Parms;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(R6ENGINE_GetFiringStartPoint),&Parms);
        return Parms.ReturnValue;
    }
    void eventR6MakeMovementNoise()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_R6MakeMovementNoise),NULL);
    }
    DECLARE_CLASS(AR6Pawn,AR6AbstractPawn,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6Pawn)
};

enum EHandsUpType
{
    HANDSUP_none            =0,
    HANDSUP_kneeling        =1,
    HANDSUP_standing        =2,
    HANDSUP_MAX             =3,
};
enum EStartingPosition
{
    POS_Stand               =0,
    POS_Kneel               =1,
    POS_Prone               =2,
    POS_Foetus              =3,
    POS_Crouch              =4,
    POS_Random              =5,
    POS_MAX                 =6,
};
enum ECivPatrolType
{
    CIVPATROL_None          =0,
    CIVPATROL_Path          =1,
    CIVPATROL_Area          =2,
    CIVPATROL_Point         =3,
    CIVPATROL_MAX           =4,
};
enum EStandWalkingAnim
{
    eStandWalkingAnim_default=0,
    eStandWalkingAnim_scared=1,
    eStandWalkingAnim_MAX   =2,
};
enum EPlayAnimType
{
    ePlayType_Default       =0,
    ePlayType_Random        =1,
    ePlayType_MAX           =2,
};
enum EGroupAnimType
{
    eGroupAnim_none         =0,
    eGroupAnim_transition   =1,
    eGroupAnim_wait         =2,
    eGroupAnim_reaction     =3,
    eGroupAnim_MAX          =4,
};

struct AR6Hostage_eventGotoProne_Parms
{
};
struct AR6Hostage_eventGotoFoetus_Parms
{
};
struct AR6Hostage_eventGotoKneel_Parms
{
};
struct AR6Hostage_eventGotoCrouch_Parms
{
};
struct AR6Hostage_eventGotoStand_Parms
{
};
struct AR6Hostage_eventSetAnimInfo_Parms
{
    INT ID;
};
struct AR6Hostage_eventFinishInitialization_Parms
{
};
class R6ENGINE_API AR6Hostage : public AR6Pawn
{
public:
    BYTE m_ePersonality;
    BYTE m_ePosition;
    BYTE m_eCivPatrol;
    BYTE m_eHandsUpType;
    BYTE m_bRepWaitAnimIndex;
    BYTE m_bSavedRepWaitAnimIndex;
    INT m_iIndex;
    BITFIELD m_bInitFinished:1 GCC_PACK(4);
    BITFIELD m_bStartAsCivilian:1;
    BITFIELD m_bCivilian:1;
    BITFIELD m_bPatrolForward:1;
    BITFIELD m_bPoliceManMp1:1;
    BITFIELD m_bPoliceManHasWeapon:1;
    BITFIELD m_bPoliceManCanSeeRainbows:1;
    BITFIELD m_bIsKneeling:1;
    BITFIELD m_bIsFoetus:1;
    BITFIELD m_bFrozen:1;
    BITFIELD m_bReactionAnim:1;
    BITFIELD m_bCrouchToScaredStandBegin:1;
    BITFIELD m_bFreed:1;
    BITFIELD m_bEscorted:1;
    BITFIELD m_bExtracted:1;
    BITFIELD m_bFeedbackExtracted:1;
    class AR6DeploymentZone* m_DZone GCC_PACK(4);
    class AR6DZonePathNode* m_currentNode;
    class AR6HostageMgr* m_mgr;
    class AR6HostageAI* m_controller;
    class AR6Rainbow* m_escortedByRainbow;
    FName m_NocsWaitingName;
    FName m_NocsSeeRainbowsName;
    FName m_globalState;
    FRandomTweenNum m_stayInFoetusTime;
    FRandomTweenNum m_stayFrozenTime;
    FRandomTweenNum m_stayProneTime;
    FRandomTweenNum m_stayCautiousGuardedStateTime;
    FRandomTweenNum m_patrolAreaWaitTween;
    FRandomTweenNum m_changeOrientationTween;
    FRandomTweenNum m_sightRadiusTween;
    FRandomTweenNum m_updatePaceTween;
    FRandomTweenNum m_waitingGoCrouchTween;
    FSTRepHostageAnim m_eSavedRepHostageAnim;
    FSTRepHostageAnim m_eCurrentRepHostageAnim;
    FStringNoInit m_szUsedTemplate;
    void eventGotoProne()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_GotoProne),NULL);
    }
    void eventGotoFoetus()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_GotoFoetus),NULL);
    }
    void eventGotoKneel()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_GotoKneel),NULL);
    }
    void eventGotoCrouch()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_GotoCrouch),NULL);
    }
    void eventGotoStand()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_GotoStand),NULL);
    }
    void eventSetAnimInfo(INT ID)
    {
        AR6Hostage_eventSetAnimInfo_Parms Parms;
        Parms.ID=ID;
        ProcessEvent(FindFunctionChecked(R6ENGINE_SetAnimInfo),&Parms);
    }
    void eventFinishInitialization()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_FinishInitialization),NULL);
    }
    DECLARE_CLASS(AR6Hostage,AR6Pawn,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6Hostage)
};


class R6ENGINE_API AR6MatineeHostage : public AR6Hostage
{
public:
    BITFIELD m_bUseHostageTemplate:1 GCC_PACK(4);
    class UR6MatineeAttach* m_MatineeAttach GCC_PACK(4);
    class UClass* m_HostageTemplate;
    DECLARE_CLASS(AR6MatineeHostage,AR6Hostage,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6MatineeHostage)
};

enum eLadderSlide
{
    SLIDE_Start             =0,
    SLIDE_Sliding           =1,
    SLIDE_End               =2,
    SLIDE_None              =3,
    SLIDE_MAX               =4,
};
enum eComAnimation
{
    COM_None                =0,
    COM_FollowMe            =1,
    COM_Cover               =2,
    COM_Go                  =3,
    COM_Regroup             =4,
    COM_Hold                =5,
    COM_MAX                 =6,
};
enum eEquipWeapon
{
    EQUIP_SecureWeapon      =0,
    EQUIP_EquipWeapon       =1,
    EQUIP_NoWeapon          =2,
    EQUIP_Armed             =3,
    EQUIP_MAX               =4,
};
enum eRainbowCircumstantialAction
{
    CAR_None                =0,
    CAR_Secure              =1,
    CAR_Free                =2,
    CAR_MAX                 =3,
};

class R6ENGINE_API AR6Rainbow : public AR6Pawn
{
public:
    BYTE m_u8DesiredPitch;
    BYTE m_u8CurrentPitch;
    BYTE m_u8DesiredYaw;
    BYTE m_u8CurrentYaw;
    BYTE m_eLadderSlide;
    BYTE m_eEquipWeapon;
    INT m_iOperativeID;
    INT m_iCurrentWeapon;
    INT m_iKills;
    INT m_iBulletsFired;
    INT m_iBulletsHit;
    INT m_iExtraPrimaryClips;
    INT m_iExtraSecondaryClips;
    INT m_iRainbowFaceID;
    BITFIELD m_bTweenFirstTimeOnly:1 GCC_PACK(4);
    BITFIELD m_bHasLockPickKit:1;
    BITFIELD m_bHasDiffuseKit:1;
    BITFIELD m_bHasElectronicsKit:1;
    BITFIELD m_bWeaponIsSecured:1;
    BITFIELD m_bThrowGrenadeWithLeftHand:1;
    BITFIELD m_bIsLockPicking:1;
    BITFIELD m_bReloadToFullAmmo:1;
    BITFIELD m_bScaleGasMaskForFemale:1;
    BITFIELD m_bInitRainbow:1;
    BITFIELD m_bGettingOnLadder:1;
    BITFIELD m_bRainbowIsFemale:1;
    BITFIELD m_bIsSurrended:1;
    BITFIELD m_bIsUnderArrest:1;
    BITFIELD m_bIsBeingArrestedOrFreed:1;
    class UMaterial* m_FaceTexture GCC_PACK(4);
    class AR6GasMask* m_GasMask;
    class AR6AbstractHelmet* m_Helmet;
    class AR6NightVision* m_NightVision;
    class AR6EngineWeapon* m_preSwitchWeapon;
    class AR6Hostage* m_aEscortedHostage[4];
    class UClass* m_GasMaskClass;
    class UClass* m_HelmetClass;
    class UClass* m_NightVisionClass;
    FRotator m_rFiringRotation;
    FPlane m_FaceCoords;
    FVector m_vStartLocation;
    FStringNoInit m_szPrimaryWeapon;
    FStringNoInit m_szPrimaryGadget;
    FStringNoInit m_szPrimaryBulletType;
    FStringNoInit m_szSecondaryWeapon;
    FStringNoInit m_szSecondaryGadget;
    FStringNoInit m_szSecondaryBulletType;
    FStringNoInit m_szPrimaryItem;
    FStringNoInit m_szSecondaryItem;
    FStringNoInit m_szSpecialityID;
    DECLARE_CLASS(AR6Rainbow,AR6Pawn,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6Rainbow)
};


class R6ENGINE_API AR6MatineeRainbow : public AR6Rainbow
{
public:
    BITFIELD m_bActivateGadget:1 GCC_PACK(4);
    BITFIELD m_bUseRainbowTemplate:1;
    class AR6RainbowAI* m_controller GCC_PACK(4);
    class UR6MatineeAttach* m_MatineeAttach;
    class UClass* m_PrimaryWeapon;
    class UClass* m_SecondaryWeapon;
    class UClass* m_PrimaryGadget;
    class UClass* m_SecondaryGadget;
    class UClass* m_RainbowTemplate;
    DECLARE_CLASS(AR6MatineeRainbow,AR6Rainbow,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6MatineeRainbow)
};

enum ETerroristCircumstantialAction
{
    CAT_None                =0,
    CAT_Secure              =1,
    CAT_MAX                 =2,
};
enum EStrategy
{
    STRATEGY_PatrolPath     =0,
    STRATEGY_PatrolArea     =1,
    STRATEGY_GuardPoint     =2,
    STRATEGY_Hunt           =3,
    STRATEGY_Test           =4,
    STRATEGY_MAX            =5,
};
enum EDefCon
{
    DEFCON_0                =0,
    DEFCON_1                =1,
    DEFCON_2                =2,
    DEFCON_3                =3,
    DEFCON_4                =4,
    DEFCON_5                =5,
    DEFCON_MAX              =6,
};
enum ETerroPersonality
{
    PERSO_Coward            =0,
    PERSO_DeskJockey        =1,
    PERSO_Normal            =2,
    PERSO_Hardened          =3,
    PERSO_SuicideBomber     =4,
    PERSO_Sniper            =5,
    PERSO_MAX               =6,
};
enum ENetworkSpecialAnim
{
    NWA_NonValid            =0,
    NWA_Playing             =1,
    NWA_Looping             =2,
    NWA_MAX                 =3,
};
enum eWeaponType
{
    WT_Pistol               =0,
    WT_Sub                  =1,
    WT_Assault              =2,
    WT_ShotGun              =3,
    WT_Sniper               =4,
    WT_LMG                  =5,
    WT_Grenade              =6,
    WT_Gadget               =7,
    WT_MAX                  =8,
};

struct AR6Terrorist_eventStopSpecialAnim_Parms
{
};
struct AR6Terrorist_eventLoopSpecialAnim_Parms
{
};
struct AR6Terrorist_eventPlaySpecialAnim_Parms
{
};
struct AR6Terrorist_eventFinishInitialization_Parms
{
};
class R6ENGINE_API AR6Terrorist : public AR6Pawn
{
public:
    BYTE m_eDefCon;
    BYTE m_ePersonality;
    BYTE m_eStrategy;
    BYTE m_eStartingStance;
    BYTE m_eHeadAttachmentType;
    BYTE m_eTerroType;
    BYTE m_eSpecialAnimValid;
    BYTE m_wWantedAimingPitch;
    BYTE m_wWantedHeadYaw;
    INT m_iGroupID;
    INT m_iCurrentAimingPitch;
    INT m_iCurrentHeadYaw;
    INT m_iDiffLevel;
    BITFIELD m_bBoltActionRifle:1 GCC_PACK(4);
    BITFIELD m_bHaveAGrenade:1;
    BITFIELD m_bInitFinished:1;
    BITFIELD m_bAllowLeave:1;
    BITFIELD m_bPreventCrouching:1;
    BITFIELD m_bHearNothing:1;
    BITFIELD m_bSprayFire:1;
    BITFIELD m_bPreventWeaponAnimation:1;
    BITFIELD m_bIsUnderArrest:1;
    BITFIELD m_bPatrolForward:1;
    BITFIELD m_bEnteringView:1;
    FLOAT m_fPlayerCAStartTime GCC_PACK(4);
    class AR6THeadAttachment* m_HeadAttachment;
    class AActor* m_Radio;
    class AR6TerroristAI* m_controller;
    class AR6DeploymentZone* m_DZone;
    FName m_szSpecialAnimName;
    FRotator m_rFiringRotation;
    FStringNoInit m_szUsedTemplate;
    FStringNoInit m_szPrimaryWeapon;
    FStringNoInit m_szGrenadeWeapon;
    FStringNoInit m_szGadget;
    void eventStopSpecialAnim()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_StopSpecialAnim),NULL);
    }
    void eventLoopSpecialAnim()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_LoopSpecialAnim),NULL);
    }
    void eventPlaySpecialAnim()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_PlaySpecialAnim),NULL);
    }
    void eventFinishInitialization()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_FinishInitialization),NULL);
    }
    DECLARE_CLASS(AR6Terrorist,AR6Pawn,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6Terrorist)
};


class R6ENGINE_API AR6MatineeTerrorist : public AR6Terrorist
{
public:
    BITFIELD m_bUseTerroristTemplate:1 GCC_PACK(4);
    class UR6MatineeAttach* m_MatineeAttach GCC_PACK(4);
    class UClass* m_PrimaryWeapon;
    class UClass* m_TerroristTemplate;
    DECLARE_CLASS(AR6MatineeTerrorist,AR6Terrorist,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6MatineeTerrorist)
};


class R6ENGINE_API AR6Ladder : public ALadder
{
public:
    BITFIELD m_bIsTopOfLadder:1 GCC_PACK(4);
    BITFIELD m_bSingleFileFormationOnly:1;
    BITFIELD bShowLog:1;
    class AR6Ladder* m_pOtherFloor GCC_PACK(4);
    DECLARE_CLASS(AR6Ladder,ALadder,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6Ladder)
};


class R6ENGINE_API AR6ClimbablePoint : public ANavigationPoint
{
public:
    class AR6ClimbableObject* m_climbableObj;
    class AR6ClimbablePoint* m_connectedClimbablePoint;
    FVector m_vLookDir;
    DECLARE_CLASS(AR6ClimbablePoint,ANavigationPoint,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6ClimbablePoint)
};

enum ECoverShotDir
{
    COVERDIR_Over           =0,
    COVERDIR_Left           =1,
    COVERDIR_Right          =2,
    COVERDIR_MAX            =3,
};
#define UCONST_C_iPawnRadius 40
#define UCONST_C_iPawnPeekingRadius 60

class R6ENGINE_API AR6CoverSpot : public ANavigationPoint
{
public:
    BYTE m_eShotDir;
    DECLARE_CLASS(AR6CoverSpot,ANavigationPoint,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6CoverSpot)
};


class R6ENGINE_API AR6Stairs : public ANavigationPoint
{
public:
    BITFIELD m_bIsTopOfStairs:1 GCC_PACK(4);
    DECLARE_CLASS(AR6Stairs,ANavigationPoint,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6Stairs)
};

enum eRoomLayout
{
    ROOM_OpensCenter        =0,
    ROOM_OpensLeft          =1,
    ROOM_OpensRight         =2,
    ROOM_None               =3,
    ROOM_MAX                =4,
};

class R6ENGINE_API AR6Door : public ANavigationPoint
{
public:
    BYTE m_eRoomLayout;
    BITFIELD m_bCloseOnUntouch:1 GCC_PACK(4);
    class AR6Door* m_CorrespondingDoor GCC_PACK(4);
    class AR6IORotatingDoor* m_RotatingDoor;
    FVector m_vLookDir;
    DECLARE_CLASS(AR6Door,ANavigationPoint,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6Door)
};

enum eLadderEndDirection
{
    LDR_Forward             =0,
    LDR_Right               =1,
    LDR_Left                =2,
    LDR_MAX                 =3,
};
enum eLadderCircumstantialAction
{
    CAL_None                =0,
    CAL_Climb               =1,
    CAL_MAX                 =2,
};
#define UCONST_C_iMaxClimbers 6

struct AR6LadderVolume_eventSetPotentialClimber_Parms
{
};
class R6ENGINE_API AR6LadderVolume : public ALadderVolume
{
public:
    BYTE m_eLadderEndDirection;
    BITFIELD bShowLog:1 GCC_PACK(4);
    FLOAT m_fBottomLadderActionRange GCC_PACK(4);
    class AR6Ladder* m_TopLadder;
    class AR6Ladder* m_BottomLadder;
    class AR6LadderCollision* m_TopCollision;
    class AR6LadderCollision* m_BottomCollision;
    class AR6Pawn* m_Climber[6];
    class USound* m_SlideSound;
    class USound* m_SlideSoundStop;
    class USound* m_HandSound;
    class USound* m_FootSound;
    void eventSetPotentialClimber()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_SetPotentialClimber),NULL);
    }
    DECLARE_CLASS(AR6LadderVolume,ALadderVolume,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6LadderVolume)
};


class R6ENGINE_API AR6StairVolume : public APhysicsVolume
{
public:
    BITFIELD m_bCreateIcon:1 GCC_PACK(4);
    BITFIELD m_bRestrictedSpaceAtStairLimits:1;
    BITFIELD m_bShowLog:1;
    class AR6StairOrientation* m_pStairOrientation GCC_PACK(4);
    FVector m_vOrientationNorm;
    DECLARE_CLASS(AR6StairVolume,APhysicsVolume,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6StairVolume)
};

enum eDefaultCircumstantialAction
{
    PCA_None                =0,
    PCA_TeamRegroup         =1,
    PCA_TeamMoveTo          =2,
    PCA_MoveAndGrenade      =3,
    PCA_GrenadeFrag         =4,
    PCA_GrenadeGas          =5,
    PCA_GrenadeFlash        =6,
    PCA_GrenadeSmoke        =7,
    PCA_MAX                 =8,
};
enum eGamePasswordRes
{
    GPR_None                =0,
    GPR_MissingPasswd       =1,
    GPR_PasswdSet           =2,
    GPR_PasswdCleared       =3,
    GPR_MAX                 =4,
};
enum eDeathCameraMode
{
    eDCM_FIRSTPERSON        =0,
    eDCM_THIRDPERSON        =1,
    eDCM_FREETHIRDPERSON    =2,
    eDCM_GHOST              =3,
    eDCM_FADETOBLACK        =4,
    eDCM_MAX                =5,
};
enum EPreRecordedMsgVoices
{
    PRMV_NeedBackup         =0,
    PRMV_FollowMe           =1,
    PRMV_CoverArea          =2,
    PRMV_MoveOut            =3,
    PRMV_CoverMe            =4,
    PRMV_Retreat            =5,
    PRMV_ReformOnMe         =6,
    PRMV_Charge             =7,
    PRMV_HoldPosition       =8,
    PRMV_SecureArea         =9,
    PRMV_WaitingOrders      =10,
    PRMV_Assauting          =11,
    PRMV_Defending          =12,
    PRMV_EscortingCargo     =13,
    PRMV_ObjectiveComplete  =14,
    PRMV_ObjectiveReached   =15,
    PRMV_Covering           =16,
    PRMV_WeaponDry          =17,
    PRMV_Move               =18,
    PRMV_Roger              =19,
    PRMV_Negative           =20,
    PRMV_TakingFire         =21,
    PRMV_PinnedDown         =22,
    PRMV_TangoSpotted       =23,
    PRMV_TangoDown          =24,
    PRMV_StatusReport       =25,
    PRMV_Clear              =26,
    PRMV_MAX                =27,
};
enum ERainbowOtherTeamVoices
{
    ROTV_SniperHasTarget    =0,
    ROTV_SniperLooseTarget  =1,
    ROTV_SniperTangoDown    =2,
    ROTV_MemberDown         =3,
    ROTV_RainbowHitRainbow  =4,
    ROTV_Objective1         =5,
    ROTV_Objective2         =6,
    ROTV_Objective3         =7,
    ROTV_Objective4         =8,
    ROTV_Objective5         =9,
    ROTV_Objective6         =10,
    ROTV_Objective7         =11,
    ROTV_Objective8         =12,
    ROTV_Objective9         =13,
    ROTV_Objective10        =14,
    ROTV_WaitAlpha          =15,
    ROTV_WaitBravo          =16,
    ROTV_WaitCharlie        =17,
    ROTV_WaitZulu           =18,
    ROTV_EntersSmoke        =19,
    ROTV_EntersGas          =20,
    ROTV_StatusEngaging     =21,
    ROTV_StatusMoving       =22,
    ROTV_StatusWaiting      =23,
    ROTV_StatusWaitAlpha    =24,
    ROTV_StatusWaitBravo    =25,
    ROTV_StatusWaitCharlie  =26,
    ROTV_StatusWaitZulu     =27,
    ROTV_StatusSniperWaitAlpha=28,
    ROTV_StatusSniperWaitBravo=29,
    ROTV_StatusSniperWaitCharlie=30,
    ROTV_StatusSniperUntilAlpha=31,
    ROTV_StatusSniperUntilBravo=32,
    ROTV_StatusSniperUntilCharlie=33,
    ROTV_MAX                =34,
};
enum eStrafeDirection
{
    STRAFE_None             =0,
    STRAFE_ForwardRight     =1,
    STRAFE_ForwardLeft      =2,
    STRAFE_BackwardRight    =3,
    STRAFE_BackwardLeft     =4,
    STRAFE_MAX              =5,
};
enum ePeekingMode
{
    PEEK_none               =0,
    PEEK_full               =1,
    PEEK_fluid              =2,
    PEEK_MAX                =3,
};
enum eDeviceAnimToPlay
{
    BA_ArmBomb              =0,
    BA_DisarmBomb           =1,
    BA_Keypad               =2,
    BA_PlantDevice          =3,
    BA_Keyboard             =4,
    BA_MAX                  =5,
};
enum eWeaponGrenadeType
{
    GT_GrenadeNone          =0,
    GT_GrenadeFrag          =1,
    GT_GrenadeGas           =2,
    GT_GrenadeFlash         =3,
    GT_GrenadeSmoke         =4,
    GT_MAX                  =5,
};
enum EButtonName
{
    EBN_None                =0,
    EBN_RoundPerMatch       =1,
    EBN_RoundTime           =2,
    EBN_NB_Players          =3,
    EBN_BombTimer           =4,
    EBN_Spectator           =5,
    EBN_RoundPerMission     =6,
    EBN_TimeBetRound        =7,
    EBN_NB_of_Terro         =8,
    EBN_InternetServer      =9,
    EBN_DedicatedServer     =10,
    EBN_FriendlyFire        =11,
    EBN_AllowTeamNames      =12,
    EBN_AutoBalTeam         =13,
    EBN_TKPenalty           =14,
    EBN_AllowRadar          =15,
    EBN_RotateMap           =16,
    EBN_AIBkp               =17,
    EBN_ForceFPersonWp      =18,
    EBN_Recruit             =19,
    EBN_Veteran             =20,
    EBN_Elite               =21,
    EBN_DiffLevel           =22,
    EBN_CamFirstPerson      =23,
    EBN_CamThirdPerson      =24,
    EBN_CamFreeThirdP       =25,
    EBN_CamGhost            =26,
    EBN_CamFadeToBk         =27,
    EBN_CamTeamOnly         =28,
    EBN_LogIn               =29,
    EBN_LogOut              =30,
    EBN_Join                =31,
    EBN_JoinIP              =32,
    EBN_Refresh             =33,
    EBN_Create              =34,
    EBN_Cancel              =35,
    EBN_Launch              =36,
    EBN_EditMsg             =37,
    EBN_CancelUbiCom        =38,
    EBN_Max                 =39,
    EBN_MAX                 =40,
};
enum ERestKitID
{
    ERestKit_SubMachineGuns =0,
    ERestKit_Shotguns       =1,
    ERestKit_AssaultRifle   =2,
    ERestKit_MachineGuns    =3,
    ERestKit_SniperRifle    =4,
    ERestKit_Pistol         =5,
    ERestKit_MachinePistol  =6,
    ERestKit_PriWpnGadget   =7,
    ERestKit_SecWpnGadget   =8,
    ERestKit_MiscGadget     =9,
    ERestKit_Max            =10,
    ERestKit_MAX            =11,
};
#define UCONST_MAX_Pitch 2000
#define UCONST_MAX_ProneSpeedRotation 6600
#define UCONST_K_MinVote 0
#define UCONST_K_CanNotVote 0
#define UCONST_K_VotedYes 1
#define UCONST_K_VotedNo 2
#define UCONST_K_EmptyBallot 3
#define UCONST_K_MaxVote 3
#define UCONST_K_KickFreqTime 300
#define UCONST_Authority_None 0
#define UCONST_Authority_Admin 1
#define UCONST_Authority_Max 1
#define UCONST_K_MaxBanPageSize 10

struct AR6PlayerController_eventClientPlayVoices_Parms
{
    class AR6SoundReplicationInfo* aAudioRepInfo;
    class USound* sndPlayVoice;
    BYTE eSlotUse;
    INT iPriority;
    BITFIELD bWaitToFinishSound;
    FLOAT fTime;
};
struct AR6PlayerController_eventGetZoomMultiplyFactor_Parms
{
    FLOAT fWeaponMaxZoom;
    FLOAT ReturnValue;
};
struct AR6PlayerController_eventPlayerTeamSelectionReceived_Parms
{
};
struct AR6PlayerController_eventSetCrouchBlend_Parms
{
    FLOAT fCrouchBlend;
};
struct AR6PlayerController_eventPostRender_Parms
{
    class UCanvas* Canvas;
};
class R6ENGINE_API AR6PlayerController : public APlayerController
{
public:
    BYTE m_bSpecialCrouch;
    BYTE m_bSpeedUpDoor;
    BYTE m_bPeekLeft;
    BYTE m_bPeekRight;
    BYTE m_bReloading;
    BYTE m_bOldPeekLeft;
    BYTE m_bOldPeekRight;
    BYTE m_wAutoAim;
    BYTE m_bPlayerRun;
    BYTE m_ePenaltyForKillingAPawn;
    INT m_iDoorSpeed;
    INT m_iFastDoorSpeed;
    INT m_iFluidMovementSpeed;
    INT m_iSpeedLevels[3];
    INT m_iShakeBlurIntensity;
    INT m_iReturnSpeed;
    INT m_iPitchReturn;
    INT m_iYawReturn;
    INT m_iSpectatorYaw;
    INT m_iSpectatorPitch;
    INT m_iPlayerCAProgress;
    INT m_iTeamId;
    INT m_iVoteResult;
    INT m_iAdmin;
    INT m_iBanPage;
    BITFIELD m_bHelmetCameraOn:1 GCC_PACK(4);
    BITFIELD m_bScopeZoom:1;
    BITFIELD m_bSniperMode:1;
    BITFIELD m_bShowFPWeapon:1;
    BITFIELD m_bShowHitLogs:1;
    BITFIELD m_bCircumstantialActionInProgress:1;
    BITFIELD m_bAllTeamsHold:1;
    BITFIELD m_bFixCamera:1;
    BITFIELD bShowLog:1;
    BITFIELD m_bShakeActive:1;
    BITFIELD m_bDisplayMilestoneMessage:1;
    BITFIELD m_bUseFirstPersonWeapon:1;
    BITFIELD m_bPlacedExplosive:1;
    BITFIELD m_bAttachCameraToEyes:1;
    BITFIELD m_bCameraGhost:1;
    BITFIELD m_bCameraFirstPerson:1;
    BITFIELD m_bCameraThirdPersonFixed:1;
    BITFIELD m_bCameraThirdPersonFree:1;
    BITFIELD m_bFadeToBlack:1;
    BITFIELD m_bSpectatorCameraTeamOnly:1;
    BITFIELD m_bSkipBeginState:1;
    BITFIELD m_bPreventTeamMemberUse:1;
    BITFIELD m_bDisplayMessage:1;
    BITFIELD m_bEndOfRoundDataReceived:1;
    BITFIELD m_bInAnOptionsPage:1;
    BITFIELD m_bPawnInitialized:1;
    BITFIELD m_bCanChangeMember:1;
    BITFIELD m_bDisplayActionProgress:1;
    BITFIELD m_bAMenuIsDisplayed:1;
    BITFIELD m_bMatineeRunning:1;
    BITFIELD m_bHasAPenalty:1;
    BITFIELD m_bPenaltyBox:1;
    BITFIELD m_bRequestTKPopUp:1;
    BITFIELD m_bProcessingRequestTKPopUp:1;
    BITFIELD m_bAlreadyPoppedTKPopUpBox:1;
    BITFIELD m_bPlayDeathMusic:1;
    BITFIELD m_bDeadAfterTeamSel:1;
    BITFIELD m_bShowCompleteHUD:1;
    BITFIELD m_bIsSecuringRainbow:1;
    BITFIELD m_bBombSearched:1;
    FLOAT m_fTeamMoveToDistance GCC_PACK(4);
    FLOAT m_fTimedBlurValue;
    FLOAT m_fBlurReturnTime;
    FLOAT m_fHitEffectTime;
    FLOAT m_fShakeTime;
    FLOAT m_fMaxShake;
    FLOAT m_fCurrentShake;
    FLOAT m_fMaxShakeTime;
    FLOAT m_fPostFluidMovementDelay;
    FLOAT m_fRetLockPosX;
    FLOAT m_fRetLockPosY;
    FLOAT m_fCurrRetPosX;
    FLOAT m_fCurrRetPosY;
    FLOAT m_fRetLockTime;
    FLOAT m_fShakeReturnTime;
    FLOAT m_fDesignerSpeedFactor;
    FLOAT m_fDesignerJumpFactor;
    FLOAT m_fMilestoneMessageDuration;
    FLOAT m_fMilestoneMessageLeft;
    FLOAT m_fCurrentDeltaTime;
    FLOAT LastDoorUpdateTime;
    FLOAT m_fLastVoteKickTime;
    FLOAT m_fStartSurrenderTime;
    class AR6Rainbow* m_pawn;
    class AR6RainbowTeam* m_TeamManager;
    class AR6Pawn* m_targetedPawn;
    class AR6CircumstantialActionQuery* m_CurrentCircumstantialAction;
    class AR6CircumstantialActionQuery* m_RequestedCircumstantialAction;
    class AR6CircumstantialActionQuery* m_PlayerCurrentCA;
    class UInteractionMaster* m_InteractionMaster;
    class UR6InteractionCircumstantialAction* m_InteractionCA;
    class UR6InteractionInventoryMnu* m_InteractionInventory;
    class AR6Rainbow* m_BackupTeamLeader;
    class AActor* m_PrevViewTarget;
    class ANavigationPoint* StartSpot;
    class UR6GameMenuCom* m_MenuCommunication;
    class UR6GameOptions* m_GameOptions;
    class AR6PlayerController* m_TeamKiller;
    class USound* m_sndUpdateWritableMap;
    class USound* m_sndDeathMusic;
    class USound* m_sndMissionComplete;
    class UR6CommonRainbowVoices* m_CommonPlayerVoicesMgr;
    class UR6AbstractGameService* m_GameService;
    class AR6IOSelfDetonatingBomb* m_pSelfDetonatingBomb;
    class AR6Pawn* m_pInteractingRainbow;
    TArrayNoInit<FstSoundPriorityPtr> m_PlayVoicesPriority;
    FRotator m_rHitRotation;
    FVector m_vAutoAimTarget;
    FVector m_vCameraLocation;
    FRotator m_rCameraRotation;
    FRotator m_rCurrentShakeRotation;
    FRotator m_rTotalShake;
    FSTImpactShake m_stImpactHit;
    FSTImpactShake m_stImpactStun;
    FSTImpactShake m_stImpactDazed;
    FSTImpactShake m_stImpactKO;
    FVector m_vNewReturnValue;
    FRotator m_rLastBulletDirection;
    FVector m_vDefaultLocation;
    FVector m_vRequestedLocation;
    FColor m_SpectatorColor;
    FSTBanPage m_BanPage;
    FStringNoInit m_szLastAdminPassword;
    FStringNoInit m_szMileStoneMessage;
    FStringNoInit m_CharacterName;
    FStringNoInit m_szBanSearch;
    FLOAT m_fLastBroadcastTimeStamp;
    FLOAT m_fPreviousBroadcastTimeStamp;
    FLOAT m_fEndOfChatLockTime;
    FLOAT m_fLastVoteEmoteTimeStamp;
    DECLARE_FUNCTION(execPlayVoicesPriority);
    DECLARE_FUNCTION(execGetLocStringWithActionKey);
    DECLARE_FUNCTION(execLocalizeTraining);
    DECLARE_FUNCTION(execFindPlayer);
    DECLARE_FUNCTION(execDebugFunction);
    DECLARE_FUNCTION(execUpdateSpectatorReticule);
    DECLARE_FUNCTION(execUpdateReticule);
    DECLARE_FUNCTION(execUpdateCircumstantialAction);
    void eventClientPlayVoices(class AR6SoundReplicationInfo* aAudioRepInfo, class USound* sndPlayVoice, BYTE eSlotUse, INT iPriority, BITFIELD bWaitToFinishSound, FLOAT fTime)
    {
        AR6PlayerController_eventClientPlayVoices_Parms Parms;
        Parms.aAudioRepInfo=aAudioRepInfo;
        Parms.sndPlayVoice=sndPlayVoice;
        Parms.eSlotUse=eSlotUse;
        Parms.iPriority=iPriority;
        Parms.bWaitToFinishSound=bWaitToFinishSound;
        Parms.fTime=fTime;
        ProcessEvent(FindFunctionChecked(R6ENGINE_ClientPlayVoices),&Parms);
    }
    FLOAT eventGetZoomMultiplyFactor(FLOAT fWeaponMaxZoom)
    {
        AR6PlayerController_eventGetZoomMultiplyFactor_Parms Parms;
        Parms.ReturnValue=0;
        Parms.fWeaponMaxZoom=fWeaponMaxZoom;
        ProcessEvent(FindFunctionChecked(R6ENGINE_GetZoomMultiplyFactor),&Parms);
        return Parms.ReturnValue;
    }
    void eventPlayerTeamSelectionReceived()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_PlayerTeamSelectionReceived),NULL);
    }
    void eventSetCrouchBlend(FLOAT fCrouchBlend)
    {
        AR6PlayerController_eventSetCrouchBlend_Parms Parms;
        Parms.fCrouchBlend=fCrouchBlend;
        ProcessEvent(FindFunctionChecked(R6ENGINE_SetCrouchBlend),&Parms);
    }
    void eventPostRender(class UCanvas* Canvas)
    {
        AR6PlayerController_eventPostRender_Parms Parms;
        Parms.Canvas=Canvas;
        ProcessEvent(FindFunctionChecked(R6ENGINE_PostRender),&Parms);
    }
    DECLARE_CLASS(AR6PlayerController,APlayerController,0|CLASS_Config,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6PlayerController)
};

enum eMovementPace
{
    PACE_None               =0,
    PACE_Prone              =1,
    PACE_CrouchWalk         =2,
    PACE_CrouchRun          =3,
    PACE_Walk               =4,
    PACE_Run                =5,
    PACE_MAX                =6,
};
#define UCONST_C_fMaxBumpTime 1.f

struct AR6AIController_eventOpenDoorFailed_Parms
{
};
struct AR6AIController_eventCanOpenDoor_Parms
{
    class AR6IORotatingDoor* Door;
    BITFIELD ReturnValue;
};
struct AR6AIController_eventR6SetMovement_Parms
{
    BYTE ePace;
};
class R6ENGINE_API AR6AIController : public AAIController
{
public:
    INT c_iDistanceBumpBackUp;
    INT m_iCurrentRouteCache;
    BITFIELD m_bStateBackupAvoidFacingWalls:1 GCC_PACK(4);
    BITFIELD m_bIgnoreBackupBump:1;
    BITFIELD m_bGetOffLadder:1;
    BITFIELD bShowLog:1;
    BITFIELD bShowInteractionLog:1;
    BITFIELD m_bChangingState:1;
    BITFIELD m_bCantInterruptIO:1;
    BITFIELD m_bMoveTargetAlreadySet:1;
    FLOAT m_fLastBump GCC_PACK(4);
    FLOAT m_fLoopAnimTime;
    class AR6Pawn* m_r6pawn;
    class AR6Ladder* m_TargetLadder;
    class AActor* m_BumpedBy;
    class AR6ClimbableObject* m_climbingObject;
    class AR6InteractiveObject* m_InteractionObject;
    class AActor* m_ActorTarget;
    class AR6IORotatingDoor* m_closeDoor;
    FName m_bumpBackUpNextState;
    FName m_openDoorNextState;
    FName m_climbingObjectNextState;
    FName m_AnimName;
    FName m_StateAfterInteraction;
    FVector m_vTargetPosition;
    FVector m_vPreviousPosition;
    FVector m_vBumpedByLocation;
    FVector m_vBumpedByVelocity;
    DECLARE_FUNCTION(execActorReachableFromLocation);
    DECLARE_FUNCTION(execFindNearbyWaitSpot);
    DECLARE_FUNCTION(execGotoOpenDoorState);
    DECLARE_FUNCTION(execNeedToOpenDoor);
    DECLARE_FUNCTION(execFindGrenadeDirectionToHitActor);
    DECLARE_FUNCTION(execCanWalkTo);
    DECLARE_FUNCTION(execFollowPathTo);
    DECLARE_FUNCTION(execFollowPath);
    DECLARE_FUNCTION(execMoveToPosition);
    DECLARE_FUNCTION(execPickActorAdjust);
    DECLARE_FUNCTION(execFindInvestigationPoint);
    DECLARE_FUNCTION(execFindPlaceToFire);
    DECLARE_FUNCTION(execFindPlaceToTakeCover);
    DECLARE_FUNCTION(execMakePathToRun);
    void eventOpenDoorFailed()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_OpenDoorFailed),NULL);
    }
    BITFIELD eventCanOpenDoor(class AR6IORotatingDoor* Door)
    {
        AR6AIController_eventCanOpenDoor_Parms Parms;
        Parms.ReturnValue=0;
        Parms.Door=Door;
        ProcessEvent(FindFunctionChecked(R6ENGINE_CanOpenDoor),&Parms);
        return Parms.ReturnValue;
    }
    void eventR6SetMovement(BYTE ePace)
    {
        AR6AIController_eventR6SetMovement_Parms Parms;
        Parms.ePace=ePace;
        ProcessEvent(FindFunctionChecked(R6ENGINE_R6SetMovement),&Parms);
    }
    DECLARE_CLASS(AR6AIController,AAIController,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6AIController)
};

enum EStartingPosition
{
    POS_Stand               =0,
    POS_Kneel               =1,
    POS_Prone               =2,
    POS_Foetus              =3,
    POS_Crouch              =4,
    POS_Random              =5,
    POS_MAX                 =6,
};
enum eHostageOrder
{
    HOrder_None             =0,
    HOrder_ComeWithMe       =1,
    HOrder_StayHere         =2,
    HOrder_Surrender        =3,
    HOrder_GotoExtraction   =4,
    HOrder_MAX              =5,
};
#define UCONST_C_iKeepDistanceFromPawn 105

class R6ENGINE_API AR6HostageAI : public AR6AIController
{
public:
    BYTE m_eTransitionPosition;
    INT m_iNotGuardedSince;
    INT m_iLastHearNoiseTime;
    INT c_iDistanceMax;
    INT c_iDistanceCatchUp;
    INT c_iDistanceToStartToRun;
    INT m_iPlayReaction1;
    INT m_iPlayReaction2;
    INT m_iWaitingTime;
    INT m_iFacingTime;
    INT m_lastUpdatePaceTime;
    INT m_iNbOrder;
    INT c_iCowardModifier;
    INT c_iNormalModifier;
    INT c_iBraveModifier;
    INT c_iWoundedModifier;
    INT c_iGasModifier;
    INT c_iEnemyNotVisibleTime;
    INT c_iCautiousLastHearNoiseTime;
    INT c_iRunForCoverOfGrenadeMinDist;
    INT m_iDbgRoll;
    BITFIELD m_bForceToStayHere:1 GCC_PACK(4);
    BITFIELD m_bRunningToward:1;
    BITFIELD m_bRunToRainbowSuccess:1;
    BITFIELD m_bStopDoTransition:1;
    BITFIELD m_bNeedToRunToCatchUp:1;
    BITFIELD m_bSlowedPace:1;
    BITFIELD m_bFollowIncreaseDistance:1;
    BITFIELD m_bLatentFnStopped:1;
    BITFIELD m_bDbgIgnoreThreat:1;
    BITFIELD m_bDbgIgnoreRainbow:1;
    BITFIELD m_bDbgRoll:1;
    BITFIELD m_bool:1;
    BITFIELD bThreatShowLog:1;
    BITFIELD m_bFirstTimeClarkComment:1;
    FLOAT m_float GCC_PACK(4);
    class AR6Hostage* m_pawn;
    class AR6HostageMgr* m_mgr;
    class UR6HostageVoices* m_VoicesManager;
    class AR6Pawn* m_pawnToFollow;
    class AR6Pawn* m_lastSeenPawn;
    class AActor* m_runAwayOfGrenade;
    class AR6Terrorist* m_terrorist;
    class AR6Pawn* m_escort;
    class AActor* m_pGotoToExtractionZone;
    class AR6EngineWeapon* DefaultWeapon;
    FName m_threatGroupName;
    FName m_runForCoverStateToGoOnFailure;
    FName m_runForCoverStateToGoOnSuccess;
    FName m_reactToGrenadeStateToReturn;
    FName m_name;
    class UClass* DefaultWeaponClass;
    FRandomTweenNum m_AITickTime;
    FThreatInfo m_threatInfo;
    FVector m_vReactionDirection;
    FOrderInfo m_aOrderInfo[2];
    FRandomTweenNum m_RunForCoverMinTween;
    FRandomTweenNum m_scareToDeathTween;
    FRandomTweenNum m_stayBlindedTweenTime;
    FVector m_vMoveToDest;
    FRotator m_rotator;
    FVector m_vectorTemp;
    FPlaySndInfo m_aPlaySndInfo[12];
    DECLARE_CLASS(AR6HostageAI,AR6AIController,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6HostageAI)
};

enum EAttackMode
{
    ATTACK_NotEngaged       =0,
    ATTACK_AimedFire        =1,
    ATTACK_SprayFire        =2,
    ATTACK_SprayFireNoStop  =3,
    ATTACK_SprayFireMove    =4,
    ATTACK_MAX              =5,
};
enum EReactionStatus
{
    REACTION_HearAndSeeAll  =0,
    REACTION_SeeHostage     =1,
    REACTION_HearBullet     =2,
    REACTION_SeeRainbow     =3,
    REACTION_Grenade        =4,
    REACTION_HearAndSeeNothing=5,
    REACTION_MAX            =6,
};
enum EEventState
{
    EVSTATE_DefaultState    =0,
    EVSTATE_RunAway         =1,
    EVSTATE_Attack          =2,
    EVSTATE_FindHostage     =3,
    EVSTATE_AttackHostage   =4,
    EVSTATE_MAX             =5,
};
enum EFollowMode
{
    FMODE_Hostage           =0,
    FMODE_Path              =1,
    FMODE_MAX               =2,
};
enum EEngageReaction
{
    EREACT_Random           =0,
    EREACT_AimedFire        =1,
    EREACT_SprayFire        =2,
    EREACT_RunAway          =3,
    EREACT_Surrender        =4,
    EREACT_MAX              =5,
};
enum EDefCon
{
    DEFCON_0                =0,
    DEFCON_1                =1,
    DEFCON_2                =2,
    DEFCON_3                =3,
    DEFCON_4                =4,
    DEFCON_5                =5,
    DEFCON_MAX              =6,
};
#define UCONST_C_MaxDistanceForActionSpot 2000
#define UCONST_C_DefaultSearchTime 30
#define UCONST_C_HostageReactionSearchTime 15
#define UCONST_C_HostageSearchTime 15
#define UCONST_C_WaitingForEnemyTime 15
#define UCONST_C_NumberOfNodeRemembered 10

struct AR6TerroristAI_eventGotoStateEngageByThreat_Parms
{
    FVector vThreathLocation;
};
struct AR6TerroristAI_eventGotoPointToAttack_Parms
{
    FVector vDestination;
    class AActor* PTarget;
};
struct AR6TerroristAI_eventGotoPointAndSearch_Parms
{
    FVector vDestination;
    BYTE ePace;
    BITFIELD bCallBackup;
    FLOAT fSearchTime;
    BYTE eNewDefCon;
};
class R6ENGINE_API AR6TerroristAI : public AR6AIController
{
public:
    BYTE m_eEngageReaction;
    BYTE m_eReactionStatus;
    BYTE m_eStateForEvent;
    BYTE m_eAttackMode;
    BYTE m_eFollowMode;
    BYTE m_wBadMoveCount;
    INT m_iCurrentGroupID;
    INT m_iTerroristInGroup;
    INT m_iRainbowInCombat;
    INT m_iChanceToDetectShooter;
    INT m_iRandomNumber;
    INT m_iStateVariable;
    INT m_iFollowYaw;
    BITFIELD m_bHearInvestigate:1 GCC_PACK(4);
    BITFIELD m_bSeeHostage:1;
    BITFIELD m_bHearThreat:1;
    BITFIELD m_bSeeRainbow:1;
    BITFIELD m_bHearGrenade:1;
    BITFIELD m_bPreciseMove:1;
    BITFIELD m_bCanFailMovingTo:1;
    BITFIELD m_bFireShort:1;
    BITFIELD m_bInPathMode:1;
    BITFIELD m_bWaiting:1;
    BITFIELD m_bAlreadyHeardSound:1;
    BITFIELD m_bHeardGrenade:1;
    BITFIELD m_bCalledForBackup:1;
    FLOAT m_fWaitingTime GCC_PACK(4);
    FLOAT m_fFacingTime;
    FLOAT m_fSearchTime;
    FLOAT m_fPawnDistance;
    FLOAT m_fFollowDist;
    FLOAT m_fLastBumpedTime;
    class AR6TerroristAI* m_TerroristLeader;
    class AR6Terrorist* m_pawn;
    class UR6TerroristMgr* m_Manager;
    class UR6TerroristVoices* m_VoicesManager;
    class AR6ActionSpot* m_pActionSpot;
    class ANavigationPoint* m_aLastNode[10];
    class AR6Pawn* m_huntedPawn;
    class AR6Hostage* m_Hostage;
    class AR6HostageAI* m_HostageAI;
    class AR6DeploymentZone* m_ZoneToEscort;
    class AR6Pawn* m_pawnToFollow;
    class AActor* m_aMovingToDestination;
    class AR6Pawn* m_LastBumped;
    class AR6DZonePath* m_path;
    class AR6DZonePathNode* m_currentNode;
    class AR6InteractiveObject* m_TriggeredIO;
    FName m_stateAfterMovingTo;
    FName m_labelAfterMovingTo;
    FName m_PatrolCurrentLabel;
    TArrayNoInit<class AR6TerroristAI*> m_listAvailableBackup;
    FVector m_vThreatLocation;
    FVector m_vHostageReactionDirection;
    FVector m_vMovingDestination;
    FRotator m_rStandRotation;
    FVector m_vSpawningPosition;
    FRotator m_rSpawningRotation;
    FStringNoInit m_sDebugString;
    DECLARE_FUNCTION(execIsAttackSpotStillValid);
    DECLARE_FUNCTION(execCallVisibleTerrorist);
    DECLARE_FUNCTION(execHaveAClearShot);
    DECLARE_FUNCTION(execFindBetterShotLocation);
    DECLARE_FUNCTION(execMakeBackupList);
    DECLARE_FUNCTION(execCallBackupForInvestigation);
    DECLARE_FUNCTION(execCallBackupForAttack);
    DECLARE_FUNCTION(execGetNextRandomNode);
    void eventGotoStateEngageByThreat(FVector vThreathLocation)
    {
        AR6TerroristAI_eventGotoStateEngageByThreat_Parms Parms;
        Parms.vThreathLocation=vThreathLocation;
        ProcessEvent(FindFunctionChecked(R6ENGINE_GotoStateEngageByThreat),&Parms);
    }
    void eventGotoPointToAttack(FVector vDestination, class AActor* PTarget)
    {
        AR6TerroristAI_eventGotoPointToAttack_Parms Parms;
        Parms.vDestination=vDestination;
        Parms.PTarget=PTarget;
        ProcessEvent(FindFunctionChecked(R6ENGINE_GotoPointToAttack),&Parms);
    }
    void eventGotoPointAndSearch(FVector vDestination, BYTE ePace, BITFIELD bCallBackup, FLOAT fSearchTime, BYTE eNewDefCon)
    {
        AR6TerroristAI_eventGotoPointAndSearch_Parms Parms;
        Parms.vDestination=vDestination;
        Parms.ePace=ePace;
        Parms.bCallBackup=bCallBackup;
        Parms.fSearchTime=fSearchTime;
        Parms.eNewDefCon=eNewDefCon;
        ProcessEvent(FindFunctionChecked(R6ENGINE_GotoPointAndSearch),&Parms);
    }
    DECLARE_CLASS(AR6TerroristAI,AR6AIController,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6TerroristAI)
};

enum eDeviceAnimToPlay
{
    BA_ArmBomb              =0,
    BA_DisarmBomb           =1,
    BA_Keypad               =2,
    BA_PlantDevice          =3,
    BA_Keyboard             =4,
    BA_MAX                  =5,
};
enum eRoomLayout
{
    ROOM_OpensCenter        =0,
    ROOM_OpensLeft          =1,
    ROOM_OpensRight         =2,
    ROOM_None               =3,
    ROOM_MAX                =4,
};
enum eFormation
{
    FORM_SingleFile         =0,
    FORM_SingleFileWallBothSides=1,
    FORM_SingleFileWallRight=2,
    FORM_SingleFileWallLeft =3,
    FORM_SingleFileNoWalls  =4,
    FORM_OrientedSingleFile =5,
    FORM_Diamond            =6,
    FORM_MAX                =7,
};
enum ePawnOrientation
{
    PO_Front                =0,
    PO_FrontRight           =1,
    PO_Right                =2,
    PO_Left                 =3,
    PO_FrontLeft            =4,
    PO_Back                 =5,
    PO_PeekLeft             =6,
    PO_PeekRight            =7,
    PO_MAX                  =8,
};
enum eCoverDirection
{
    COVER_Left              =0,
    COVER_Center            =1,
    COVER_Right             =2,
    COVER_None              =3,
    COVER_MAX               =4,
};

struct AR6RainbowAI_eventStopAttack_Parms
{
};
struct AR6RainbowAI_eventAttackTimer_Parms
{
};
class R6ENGINE_API AR6RainbowAI : public AR6AIController
{
public:
    BYTE m_eFormation;
    BYTE m_ePawnOrientation;
    BYTE m_eCurrentRoomLayout;
    BYTE m_eCoverDirection;
    INT m_iStateProgress;
    INT m_iTurn;
    INT m_iWaitCounter;
    INT m_iActionUseGadgetGroup;
    BITFIELD m_bTeamMateHasBeenKilled:1 GCC_PACK(4);
    BITFIELD m_bIsCatchingUp:1;
    BITFIELD m_bIsMovingBackwards:1;
    BITFIELD m_bSlowedPace:1;
    BITFIELD m_bAlreadyWaiting:1;
    BITFIELD m_bReactToNoise:1;
    BITFIELD m_bUseStaggeredFormation:1;
    BITFIELD m_bWeaponsDry:1;
    BITFIELD m_bAimingWeaponAtEnemy:1;
    BITFIELD m_bEnteredRoom:1;
    BITFIELD m_bIndividualAttacks:1;
    BITFIELD m_bStateFlag:1;
    BITFIELD m_bReorganizationPending:1;
    FLOAT m_fLastReactionToGas GCC_PACK(4);
    FLOAT m_fGrenadeDangerRadius;
    FLOAT m_fAttackTimerRate;
    FLOAT m_fAttackTimerCounter;
    FLOAT m_fFiringAttackTimer;
    class AR6Rainbow* m_pawn;
    class AR6RainbowTeam* m_TeamManager;
    class AR6Rainbow* m_TeamLeader;
    class AR6Rainbow* m_PaceMember;
    class AActor* m_NextMoveTarget;
    class AR6IORotatingDoor* m_RotatingDoor;
    class AActor* m_ActionTarget;
    class AActor* m_DesiredTarget;
    class UR6CommonRainbowVoices* m_CommonMemberVoicesMgr;
    FName m_PostFindPathToState;
    FName m_PostLockPickState;
    FVector m_vLocationOnTarget;
    FVector m_vGrenadeLocation;
    FVector m_vDesiredLocation;
    FVector m_vNoiseFocalPoint;
    FVector m_vPreEntryPositions[2];
    DECLARE_FUNCTION(execClearToSnipe);
    DECLARE_FUNCTION(execAClearShotIsAvailable);
    DECLARE_FUNCTION(execFindSafeSpot);
    DECLARE_FUNCTION(execLookAroundRoom);
    DECLARE_FUNCTION(execSetOrientation);
    DECLARE_FUNCTION(execCheckEnvironment);
    DECLARE_FUNCTION(execGetEntryPosition);
    DECLARE_FUNCTION(execGetGuardPosition);
    DECLARE_FUNCTION(execGetLadderPosition);
    DECLARE_FUNCTION(execGetTargetPosition);
    void eventStopAttack()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_StopAttack),NULL);
    }
    void eventAttackTimer()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_AttackTimer),NULL);
    }
    DECLARE_CLASS(AR6RainbowAI,AR6AIController,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6RainbowAI)
};

enum EClimbHeight
{
    EClimbNone              =0,
    EClimb64                =1,
    EClimb96                =2,
};
enum eClimbableObjectCircumstantialAction
{
    COBJ_None               =0,
    COBJ_Climb              =1,
    COBJ_MAX                =2,
};

class R6ENGINE_API AR6ClimbableObject : public AR6AbstractClimbableObj
{
public:
    BYTE m_eClimbHeight;
    class AR6ClimbablePoint* m_climbablePoint;
    class AR6ClimbablePoint* m_insideClimbablePoint;
    FVector m_vClimbDir;
    DECLARE_CLASS(AR6ClimbableObject,AR6AbstractClimbableObj,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6ClimbableObject)
};

#define UCONST_NB_PARTICLES 16

class R6ENGINE_API AR6RagDoll : public AR6AbstractCorpse
{
public:
    FLOAT m_fAccumulatedTime;
    class AR6AbstractPawn* m_pawnOwner;
    TArrayNoInit<FSTSpring> m_aSpring;
    FSTParticle m_aParticle[16];
    DECLARE_CLASS(AR6RagDoll,AR6AbstractCorpse,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6RagDoll)
};


class R6ENGINE_API AR6IOSound : public AActor
{
public:
    DECLARE_CLASS(AR6IOSound,AActor,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6IOSound)
};

enum EInteractiveAction
{
    IA_PlayAnim             =0,
    IA_LookAt               =1,
    IA_MAX                  =2,
};
#define UCONST_c_iIObjectSkinMax 4

struct AR6InteractiveObject_eventSetNewDamageState_Parms
{
    FLOAT fPercentage;
};
class R6ENGINE_API AR6InteractiveObject : public AActor
{
public:
    BYTE m_HearNoiseType;
    INT m_iActionNumber;
    INT m_iActionIndex;
    INT m_iHitPoints;
    INT m_iCurrentHitPoints;
    INT m_iCurrentState;
    BITFIELD m_bCollisionRemovedFromActor:1 GCC_PACK(4);
    BITFIELD m_bOriginalCollideActors:1;
    BITFIELD m_bOriginalBlockActors:1;
    BITFIELD m_bOriginalBlockPlayers:1;
    BITFIELD m_bPawnDied:1;
    BITFIELD bShowLog:1;
    BITFIELD m_bBroken:1;
    BITFIELD m_bRainbowCanInteract:1;
    BITFIELD m_bEndAction:1;
    BITFIELD m_bBlockCoronas:1;
    BITFIELD m_bBreakableByFlashBang:1;
    FLOAT m_fRadius GCC_PACK(4);
    FLOAT m_fProbability;
    FLOAT m_fActionInterval;
    FLOAT m_fTimeSinceAction;
    FLOAT m_fTimeForNextSound;
    FLOAT m_fTimerInterval;
    FLOAT m_fPlayerCAStartTime;
    FLOAT m_HearNoiseLoudness;
    FLOAT m_fNetDamagePercentage;
    FLOAT m_fAIBreakNoiseRadius;
    class AR6AIController* m_InteractionOwner;
    class AActor* m_RemoveCollisionFromActor;
    class ANavigationPoint* m_Anchor;
    class AActor* m_vEndActionGoto;
    class UR6InteractiveObjectAction* m_CurrentInteractiveObject;
    class APawn* m_SeePlayerPawn;
    class AActor* m_HearNoiseNoiseMaker;
    class UMaterial* m_aOldSkins[4];
    class UMaterial* m_aRepSkins[4];
    class UStaticMesh* sm_staticMesh;
    class AR6Pawn* m_User;
    class USound* sm_AmbientSound;
    class USound* sm_AmbientSoundStop;
    FName m_vEndActionAnimName;
    TArrayNoInit<class UR6InteractiveObjectAction*> m_ActionList;
    TArrayNoInit<class UMaterial*> sm_aSkins;
    TArrayNoInit<FstDamageState> m_StateList;
    TArrayNoInit<class AActor*> m_AttachedActors;
    void eventSetNewDamageState(FLOAT fPercentage)
    {
        AR6InteractiveObject_eventSetNewDamageState_Parms Parms;
        Parms.fPercentage=fPercentage;
        ProcessEvent(FindFunctionChecked(R6ENGINE_SetNewDamageState),&Parms);
    }
    DECLARE_CLASS(AR6InteractiveObject,AActor,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6InteractiveObject)
};


class R6ENGINE_API AR6IActionObject : public AR6InteractiveObject
{
public:
    FLOAT m_fMinMouseMove;
    FLOAT m_fMaxMouseMove;
    class AActor* m_ActionInstigator;
    DECLARE_CLASS(AR6IActionObject,AR6InteractiveObject,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6IActionObject)
};

enum eDoorCircumstantialAction
{
    CA_None                 =0,
    CA_Open                 =1,
    CA_OpenAndClear         =2,
    CA_OpenAndGrenade       =3,
    CA_OpenGrenadeAndClear  =4,
    CA_Close                =5,
    CA_Clear                =6,
    CA_Grenade              =7,
    CA_GrenadeAndClear      =8,
    CA_GrenadeFrag          =9,
    CA_GrenadeGas           =10,
    CA_GrenadeFlash         =11,
    CA_GrenadeSmoke         =12,
    CA_Unlock               =13,
    CA_Lock                 =14,
    CA_LockPickStop         =15,
    CA_MAX                  =16,
};

class R6ENGINE_API AR6IORotatingDoor : public AR6IActionObject
{
public:
    INT m_iLockHP;
    INT m_iCurrentLockHP;
    INT m_iMaxOpeningDeg;
    INT m_iInitialOpeningDeg;
    INT m_iYawInit;
    INT m_iYawMax;
    INT m_iMaxOpening;
    INT m_iInitialOpening;
    INT m_iCurrentOpening;
    BITFIELD m_bTreatDoorAsWindow:1 GCC_PACK(4);
    BITFIELD bShowLog:1;
    BITFIELD m_bInProcessOfClosing:1;
    BITFIELD m_bInProcessOfOpening:1;
    BITFIELD m_bUseWheel:1;
    BITFIELD m_bForceNoFormation:1;
    BITFIELD m_bIsOpeningClockWise:1;
    BITFIELD m_bIsDoorLocked:1;
    BITFIELD sm_bIsDoorLocked:1;
    BITFIELD m_bIsDoorClosed:1;
    FLOAT m_fWindowWidth GCC_PACK(4);
    FLOAT m_fUnlockBaseTime;
    class AR6Door* m_DoorActorA;
    class AR6Door* m_DoorActorB;
    class USound* m_OpeningSound;
    class USound* m_OpeningWheelSound;
    class USound* m_ClosingSound;
    class USound* m_ClosingWheelSound;
    class USound* m_LockSound;
    class USound* m_UnlockSound;
    class USound* m_MoveAmbientSound;
    class USound* m_MoveAmbientSoundStop;
    class USound* m_LockPickSound;
    class USound* m_LockPickSoundStop;
    class USound* m_ExplosionSound;
    TArrayNoInit<class AR6AbstractBullet*> m_BreachAttached;
    FVector m_vNormal;
    FVector m_vCenterOfDoor;
    FVector m_vDoorADir2D;
    DECLARE_FUNCTION(execRemoveBreach);
    DECLARE_FUNCTION(execAddBreach);
    DECLARE_FUNCTION(execWillOpenOnTouch);
    DECLARE_CLASS(AR6IORotatingDoor,AR6IActionObject,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6IORotatingDoor)
};

enum eDeviceCircumstantialAction
{
    DCA_None                =0,
    DCA_DisarmBomb          =1,
    DCA_ArmBomb             =2,
    DCA_Device              =3,
    DCA_MAX                 =4,
};
enum eStateIOObejct
{
    SIO_Start               =0,
    SIO_Interrupt           =1,
    SIO_Complete            =2,
    SIO_MAX                 =3,
};
enum EDefCon
{
    DEFCON_0                =0,
    DEFCON_1                =1,
    DEFCON_2                =2,
    DEFCON_3                =3,
    DEFCON_4                =4,
    DEFCON_5                =5,
    DEFCON_MAX              =6,
};
enum eDeviceAnimToPlay
{
    BA_ArmBomb              =0,
    BA_DisarmBomb           =1,
    BA_Keypad               =2,
    BA_PlantDevice          =3,
    BA_Keyboard             =4,
    BA_MAX                  =5,
};

class R6ENGINE_API AR6IOObject : public AR6IActionObject
{
public:
    BYTE m_eAnimToPlay;
    BYTE m_ObjectState;
    BITFIELD m_bToggleType:1 GCC_PACK(4);
    BITFIELD sm_bToggleType:1;
    BITFIELD m_bIsActivated:1;
    BITFIELD sm_bIsActivated:1;
    FLOAT m_fGainTimeWithElectronicsKit GCC_PACK(4);
    FLOAT m_fLockObjectTime;
    class USound* m_StartSnd;
    class USound* m_InterruptedSnd;
    class USound* m_CompletedSnd;
    DECLARE_CLASS(AR6IOObject,AR6IActionObject,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6IOObject)
};

enum ESoundBeepBomb
{
    SBB_Normal              =0,
    SBB_Fast                =1,
    SBB_Faster              =2,
    SBB_MAX                 =3,
};
#define UCONST_C_fBombTimerInterval 0.1

class R6ENGINE_API AR6IOBomb : public AR6IOObject
{
public:
    BYTE m_eBeepState;
    INT m_iEnergy;
    BITFIELD bShowLog:1 GCC_PACK(4);
    BITFIELD m_bExploded:1;
    FLOAT m_fTimeOfExplosion GCC_PACK(4);
    FLOAT m_fTimeLeft;
    FLOAT m_fRepTimeLeft;
    FLOAT m_fLastLevelTime;
    FLOAT m_fDisarmBombTimeMin;
    FLOAT m_fDisarmBombTimeMax;
    FLOAT m_fExplosionRadius;
    FLOAT m_fKillBlastRadius;
    class UMaterial* m_ArmedTexture;
    class USound* m_sndActivationBomb;
    class USound* m_sndPlayBeepNormal;
    class USound* m_sndStopBeepNormal;
    class USound* m_sndPlayBeepFast;
    class USound* m_sndStopBeepFast;
    class USound* m_sndPlayBeepFaster;
    class USound* m_sndStopBeepFaster;
    class USound* m_sndExplosion;
    class USound* m_sndEarthQuake;
    class AEmitter* m_pEmmiter;
    class UClass* m_pExplosionLight;
    FVector m_vOffset;
    FStringNoInit m_szIdentityID;
    FStringNoInit m_szIdentity;
    FStringNoInit m_szMsgArmedID;
    FStringNoInit m_szMsgDisarmedID;
    FStringNoInit m_szMissionObjLocalization;
    DECLARE_CLASS(AR6IOBomb,AR6IOObject,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6IOBomb)
};


class R6ENGINE_API AR6GenericHB : public AR6InteractiveObject
{
public:
    BITFIELD m_bFirstImpact:1 GCC_PACK(4);
    class USound* m_ImpactSound GCC_PACK(4);
    class USound* m_ImpactGroundSound;
    class USound* m_ImpactWaterSound;
    DECLARE_CLASS(AR6GenericHB,AR6InteractiveObject,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6GenericHB)
};


class R6ENGINE_API AR6StairOrientation : public AActor
{
public:
    class AR6StairVolume* m_pStairVolume;
    DECLARE_CLASS(AR6StairOrientation,AActor,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6StairOrientation)
};


class R6ENGINE_API AR6DZoneRandomPointNode : public AActor
{
public:
    BYTE m_eStance;
    INT m_iGroupID;
    BITFIELD m_bHighPriority:1 GCC_PACK(4);
    class AR6DZoneRandomPoints* m_pZone GCC_PACK(4);
    DECLARE_CLASS(AR6DZoneRandomPointNode,AActor,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6DZoneRandomPointNode)
};

enum EEngageReaction
{
    EREACT_Random           =0,
    EREACT_AimedFire        =1,
    EREACT_SprayFire        =2,
    EREACT_RunAway          =3,
    EREACT_Surrender        =4,
    EREACT_MAX              =5,
};
enum EDefCon
{
    DEFCON_0                =0,
    DEFCON_1                =1,
    DEFCON_2                =2,
    DEFCON_3                =3,
    DEFCON_4                =4,
    DEFCON_5                =5,
    DEFCON_MAX              =6,
};
#define UCONST_C_NB_Template 5

class R6ENGINE_API AR6DeploymentZone : public AActor
{
public:
    BYTE m_eDefCon;
    BYTE m_eEngageReaction;
    INT m_iGroupID;
    INT m_HostageShootChance;
    INT m_iMinTerrorist;
    INT m_iMaxTerrorist;
    INT m_iMinHostage;
    INT m_iMaxHostage;
    BITFIELD m_bDontSeePlayer:1 GCC_PACK(4);
    BITFIELD m_bDontHearPlayer:1;
    BITFIELD m_bHearNothing:1;
    BITFIELD m_bAllowLeave:1;
    BITFIELD m_bPreventCrouching:1;
    BITFIELD m_bKnowInPlanning:1;
    BITFIELD m_bHuntDisallowed:1;
    BITFIELD m_bHuntFromStart:1;
    BITFIELD m_bAlreadyInitialized:1;
    class AR6InteractiveObject* m_InteractiveObject GCC_PACK(4);
    TArrayNoInit<INT> m_iGroupIDsToCall;
    TArrayNoInit<class AR6DeploymentZone*> m_HostageZoneToCheck;
    TArrayNoInit<class AR6Terrorist*> m_aTerrorist;
    TArrayNoInit<class AR6Hostage*> m_aHostage;
    FSTTemplate m_Template[5];
    FSTTemplate m_HostageTemplates[5];
    DECLARE_FUNCTION(execGetClosestHostage);
    DECLARE_FUNCTION(execOrderTerroListFromDistanceTo);
    DECLARE_FUNCTION(execAddHostage);
    DECLARE_FUNCTION(execHaveHostage);
    DECLARE_FUNCTION(execHaveTerrorist);
    DECLARE_FUNCTION(execFindClosestPointTo);
    DECLARE_FUNCTION(execIsPointInZone);
    DECLARE_FUNCTION(execFindRandomPointInArea);
    DECLARE_FUNCTION(execFirstInit);
    DECLARE_CLASS(AR6DeploymentZone,AActor,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6DeploymentZone)
};


class R6ENGINE_API AR6DZoneRandomPoints : public AR6DeploymentZone
{
public:
    BITFIELD m_bSelectNodeInEditor:1 GCC_PACK(4);
    BITFIELD m_bInInit:1;
    TArrayNoInit<class AR6DZoneRandomPointNode*> m_aNode GCC_PACK(4);
    TArrayNoInit<class AR6DZoneRandomPointNode*> m_aTempHighPriorityNode;
    TArrayNoInit<class AR6DZoneRandomPointNode*> m_aTempNode;
    DECLARE_CLASS(AR6DZoneRandomPoints,AR6DeploymentZone,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6DZoneRandomPoints)
};


class R6ENGINE_API AR6DZoneRectangle : public AR6DeploymentZone
{
public:
    FLOAT m_fX;
    FLOAT m_fY;
    DECLARE_CLASS(AR6DZoneRectangle,AR6DeploymentZone,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6DZoneRectangle)
};


class R6ENGINE_API AR6DZonePoint : public AR6DeploymentZone
{
public:
    BYTE m_eStance;
    BITFIELD m_bUseReactionZone:1 GCC_PACK(4);
    FLOAT m_fReactionZoneX GCC_PACK(4);
    FLOAT m_fReactionZoneY;
    FVector m_vReactionZoneCenter;
    DECLARE_CLASS(AR6DZonePoint,AR6DeploymentZone,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6DZonePoint)
};

enum EInformTeam
{
    INFO_EnterPath          =0,
    INFO_ReachNode          =1,
    INFO_FinishWaiting      =2,
    INFO_Engage             =3,
    INFO_ExitPath           =4,
    INFO_Dead               =5,
    INFO_MAX                =6,
};

class R6ENGINE_API AR6DZonePath : public AR6DeploymentZone
{
public:
    BITFIELD m_bCycle:1 GCC_PACK(4);
    BITFIELD m_bSelectNodeInEditor:1;
    BITFIELD m_bActAsGroup:1;
    BITFIELD bShowLog:1;
    TArrayNoInit<class AR6DZonePathNode*> m_aNode GCC_PACK(4);
    DECLARE_CLASS(AR6DZonePath,AR6DeploymentZone,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6DZonePath)
};


class R6ENGINE_API AR6DZoneCircle : public AR6DeploymentZone
{
public:
    FLOAT m_fRadius;
    DECLARE_CLASS(AR6DZoneCircle,AR6DeploymentZone,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6DZoneCircle)
};


class R6ENGINE_API AR6DZonePathNode : public AActor
{
public:
    INT m_AnimChance;
    BITFIELD m_bWait:1 GCC_PACK(4);
    FLOAT m_fRadius GCC_PACK(4);
    class AR6DZonePath* m_pPath;
    class USound* m_SoundToPlay;
    class USound* m_SoundToPlayStop;
    FName m_AnimToPlay;
    DECLARE_CLASS(AR6DZonePathNode,AActor,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6DZonePathNode)
};


class R6ENGINE_API AR6EnvironmentNode : public AActor
{
public:
    FVector m_vLookDir;
    DECLARE_CLASS(AR6EnvironmentNode,AActor,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6EnvironmentNode)
};

enum ePlayerRoomEntry
{
    PRE_Center              =0,
    PRE_Left                =1,
    PRE_Right               =2,
    PRE_MAX                 =3,
};
enum EWeaponSound
{
    WSOUND_None             =0,
    WSOUND_Initialize       =1,
    WSOUND_PlayTrigger      =2,
    WSOUND_PlayFireSingleShot=3,
    WSOUND_PlayFireEndSingleShot=4,
    WSOUND_PlayFireThreeBurst=5,
    WSOUND_PlayFireFullAuto =6,
    WSOUND_PlayEmptyMag     =7,
    WSOUND_PlayReloadEmpty  =8,
    WSOUND_PlayReload       =9,
    WSOUND_StopFireFullAuto =10,
    WSOUND_MAX              =11,
};
enum eWeaponGrenadeType
{
    GT_GrenadeNone          =0,
    GT_GrenadeFrag          =1,
    GT_GrenadeGas           =2,
    GT_GrenadeFlash         =3,
    GT_GrenadeSmoke         =4,
    GT_MAX                  =5,
};
enum eTeamState
{
    TS_None                 =0,
    TS_Waiting              =1,
    TS_Holding              =2,
    TS_Moving               =3,
    TS_Following            =4,
    TS_Regrouping           =5,
    TS_Engaging             =6,
    TS_Sniping              =7,
    TS_LockPicking          =8,
    TS_OpeningDoor          =9,
    TS_ClosingDoor          =10,
    TS_Opening              =11,
    TS_Closing              =12,
    TS_ClearingRoom         =13,
    TS_Grenading            =14,
    TS_DisarmingBomb        =15,
    TS_InteractWithDevice   =16,
    TS_SecuringTerrorist    =17,
    TS_ClimbingLadder       =18,
    TS_WaitingForOrders     =19,
    TS_SettingBreach        =20,
    TS_Retired              =21,
    TS_MAX                  =22,
};
enum eFormation
{
    FORM_SingleFile         =0,
    FORM_SingleFileWallBothSides=1,
    FORM_SingleFileWallRight=2,
    FORM_SingleFileWallLeft =3,
    FORM_SingleFileNoWalls  =4,
    FORM_OrientedSingleFile =5,
    FORM_Diamond            =6,
    FORM_MAX                =7,
};
#define UCONST_c_iMaxTeam 4

struct AR6RainbowTeam_eventRequestFormationChange_Parms
{
    BYTE eFormation;
};
struct AR6RainbowTeam_eventUpdateTeamFormation_Parms
{
    BYTE eFormation;
};
class R6ENGINE_API AR6RainbowTeam : public AActor
{
public:
    BYTE m_bHasGrenade;
    BYTE m_eFormation;
    BYTE m_eRequestedFormation;
    BYTE m_ePlayerRoomEntry;
    BYTE m_eEntryGrenadeType;
    BYTE m_eMovementMode;
    BYTE m_eMovementSpeed;
    BYTE m_ePlanAction;
    BYTE m_eNextAPAction;
    BYTE m_ePlayerAPAction;
    BYTE m_eTeamState;
    BYTE m_eBackupTeamState;
    BYTE m_eGoCode;
    BYTE m_eBackupGoCode;
    INT m_iMemberCount;
    INT m_iIDVoicesMgr;
    INT m_iFormationDistance;
    INT m_iDiagonalDistance;
    INT m_iTeamHealth[4];
    INT m_iMembersLost;
    INT m_iGrenadeThrower;
    INT m_iIntermLeader;
    INT m_iSpawnDistance;
    INT m_iSpawnDiagDist;
    INT m_iSpawnDiagOther;
    INT m_iSubAction;
    INT m_iRainbowTeamName;
    INT m_iTeamAction;
    BITFIELD m_bLeaderIsAPlayer:1 GCC_PACK(4);
    BITFIELD m_bPlayerHasFocus:1;
    BITFIELD m_bPlayerInGhostMode:1;
    BITFIELD m_bTeamIsClimbingLadder:1;
    BITFIELD m_bTeamIsSeparatedFromLeader:1;
    BITFIELD m_bGrenadeInProximity:1;
    BITFIELD m_bGasGrenadeInProximity:1;
    BITFIELD m_bEntryInProgress:1;
    BITFIELD m_bDoorOpensTowardTeam:1;
    BITFIELD m_bDoorOpensClockWise:1;
    BITFIELD m_bRainbowIsInFrontOfDoor:1;
    BITFIELD m_bWoundedHostage:1;
    BITFIELD m_bCAWaitingForZuluGoCode:1;
    BITFIELD m_bPreventUsingTeam:1;
    BITFIELD m_bSniperReady:1;
    BITFIELD m_bSkipAction:1;
    BITFIELD m_bWasSeparatedFromLeader:1;
    BITFIELD m_bAllTeamsHold:1;
    BITFIELD m_bTeamIsHoldingPosition:1;
    BITFIELD m_bSniperHold:1;
    BITFIELD m_bTeamIsRegrouping:1;
    BITFIELD m_bPlayerRequestedTeamReform:1;
    BITFIELD m_bPendingSnipeUntilGoCode:1;
    BITFIELD m_bTeamIsEngagingEnemy:1;
    BITFIELD bShowLog:1;
    BITFIELD bPlanningLog:1;
    BITFIELD m_bFirstTimeInGas:1;
    FLOAT m_fEngagingTimer GCC_PACK(4);
    class AR6Rainbow* m_Team[4];
    class UR6GameColors* Colors;
    class UR6RainbowPlayerVoices* m_PlayerVoicesMgr;
    class UR6RainbowMemberVoices* m_MemberVoicesMgr;
    class UR6RainbowOtherTeamVoices* m_OtherTeamVoicesMgr;
    class UR6MultiCommonVoices* m_MultiCommonVoicesMgr;
    class UR6MultiCoopVoices* m_MultiCoopPlayerVoicesMgr;
    class UR6MultiCoopVoices* m_MultiCoopMemberVoicesMgr;
    class UR6PreRecordedMsgVoices* m_PreRecMsgVoicesMgr;
    class AR6Rainbow* m_TeamLeader;
    class UR6AbstractPlanningInfo* m_TeamPlanning;
    class AR6Pawn* m_PawnControllingDoor;
    class AR6Ladder* m_TeamLadder;
    class AR6Door* m_Door;
    class AR6CircumstantialActionQuery* m_actionRequested;
    class AActor* m_PlanActionPoint;
    class AR6IORotatingDoor* m_BreachingDoor;
    class AActor* m_LastActionPoint;
    class AR6Pawn* m_SurrenderedTerrorist;
    class AR6Pawn* m_HostageToRescue;
    class AActor* m_PlayerLastActionPoint;
    TArrayNoInit<class AR6InteractiveObject*> m_InteractiveObjectList;
    FColor m_TeamColour;
    FRotator m_rTeamDirection;
    FVector m_vActionLocation;
    FVector m_vPlanActionLocation;
    FRotator m_rSnipingDir;
    FVector m_vPreviousPosition;
    FVector m_vNoiseSource;
    void eventRequestFormationChange(BYTE eFormation)
    {
        AR6RainbowTeam_eventRequestFormationChange_Parms Parms;
        Parms.eFormation=eFormation;
        ProcessEvent(FindFunctionChecked(R6ENGINE_RequestFormationChange),&Parms);
    }
    void eventUpdateTeamFormation(BYTE eFormation)
    {
        AR6RainbowTeam_eventUpdateTeamFormation_Parms Parms;
        Parms.eFormation=eFormation;
        ProcessEvent(FindFunctionChecked(R6ENGINE_UpdateTeamFormation),&Parms);
    }
    DECLARE_CLASS(AR6RainbowTeam,AActor,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6RainbowTeam)
};


class R6ENGINE_API AR6TeamMemberReplicationInfo : public AActor
{
public:
    BYTE m_RotationYaw;
    BYTE m_BlinkCounter;
    BYTE m_iTeamPosition;
    BYTE m_eHealth;
    BYTE m_BlinkCounterOld;
    INT m_iTeam;
    INT m_iTeamId;
    BITFIELD m_bIsPrimaryGadgetEmpty:1 GCC_PACK(4);
    BITFIELD m_bIsSecondaryGadgetEmpty:1;
    BITFIELD m_bIsPilot:1;
    FLOAT m_fLastCommunicationTime GCC_PACK(4);
    FLOAT m_fClientUpdateFrequency;
    FLOAT m_fClientLastUpdate;
    FVector m_Location;
    FStringNoInit m_CharacterName;
    FStringNoInit m_PrimaryWeapon;
    FStringNoInit m_SecondaryWeapon;
    FStringNoInit m_PrimaryGadget;
    FStringNoInit m_SecondaryGadget;
    DECLARE_CLASS(AR6TeamMemberReplicationInfo,AActor,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6TeamMemberReplicationInfo)
};

enum EWeaponSound
{
    WSOUND_None             =0,
    WSOUND_Initialize       =1,
    WSOUND_PlayTrigger      =2,
    WSOUND_PlayFireSingleShot=3,
    WSOUND_PlayFireEndSingleShot=4,
    WSOUND_PlayFireThreeBurst=5,
    WSOUND_PlayFireFullAuto =6,
    WSOUND_PlayEmptyMag     =7,
    WSOUND_PlayReloadEmpty  =8,
    WSOUND_PlayReload       =9,
    WSOUND_StopFireFullAuto =10,
    WSOUND_MAX              =11,
};

class R6ENGINE_API AR6SoundReplicationInfo : public AActor
{
public:
    BYTE m_CurrentWeapon;
    BYTE m_NewWeaponSound;
    BYTE m_NewPawnState;
    BYTE m_Material;
    BYTE m_pawnState;
    BYTE m_TeamColor;
    BYTE m_GunSoundType;
    BYTE m_StatusOtherTeam;
    BYTE m_LastPlayedWeaponSound;
    BITFIELD m_bInitialize:1 GCC_PACK(4);
    BITFIELD m_bLastSoundFullAuto:1;
    FLOAT m_fClientUpdateFrequency GCC_PACK(4);
    FLOAT m_fClientLastUpdate;
    class AR6Pawn* m_pawnOwner;
    class AR6PawnReplicationInfo* m_PawnRepInfo;
    FVector m_Location;
    DECLARE_FUNCTION(execPlayLocalWeaponSound);
    DECLARE_FUNCTION(execStopWeaponSound);
    DECLARE_FUNCTION(execPlayWeaponSound);
    DECLARE_CLASS(AR6SoundReplicationInfo,AActor,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(AR6SoundReplicationInfo)
};


struct UR6SubActionAnimSequence_eventSequenceFinished_Parms
{
};
struct UR6SubActionAnimSequence_eventSequenceChanged_Parms
{
};
class R6ENGINE_API UR6SubActionAnimSequence : public UMatSubAction
{
public:
    INT m_CurIndex;
    BITFIELD m_bUseRootMotion:1 GCC_PACK(4);
    BITFIELD m_bFirstTime:1;
    BITFIELD m_bResetAnimation:1;
    class AR6Pawn* m_AffectedPawn GCC_PACK(4);
    class AActor* m_AffectedActor;
    class UR6PlayAnim* m_CurSequence;
    TArrayNoInit<class UR6PlayAnim*> m_Sequences;
    void eventSequenceFinished()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_SequenceFinished),NULL);
    }
    void eventSequenceChanged()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_SequenceChanged),NULL);
    }
    DECLARE_CLASS(UR6SubActionAnimSequence,UMatSubAction,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(UR6SubActionAnimSequence)
};


class R6ENGINE_API UR6SubActionLookAt : public UMatSubAction
{
public:
    BITFIELD m_bAim:1 GCC_PACK(4);
    BITFIELD m_bNoBlend:1;
    class AR6Pawn* m_AffectedPawn GCC_PACK(4);
    class AActor* m_TargetActor;
    DECLARE_CLASS(UR6SubActionLookAt,UMatSubAction,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(UR6SubActionLookAt)
};

#define UCONST_MAX_Hostage 16

class R6ENGINE_API UR6TerroristMgr : public UR6AbstractTerroristMgr
{
public:
    INT m_iCurrentMax;
    INT m_iCurrentGroupID;
    TArrayNoInit<class AR6DeploymentZone*> m_aDeploymentZoneWithHostage;
    FSTHostage m_ArrayHostage[16];
    DECLARE_FUNCTION(execFindNearestZoneForHostage);
    DECLARE_FUNCTION(execInit);
    DECLARE_CLASS(UR6TerroristMgr,UR6AbstractTerroristMgr,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(UR6TerroristMgr)
};


struct UR6PlayAnim_eventAnimFinished_Parms
{
};
class R6ENGINE_API UR6PlayAnim : public UObject
{
public:
    INT m_MaxPlayTime;
    INT m_PlayedTime;
    INT m_iFrameNumber;
    BITFIELD m_bLoopAnim:1 GCC_PACK(4);
    BITFIELD m_bStarted:1;
    BITFIELD m_bFirstTime:1;
    FLOAT m_Rate GCC_PACK(4);
    FLOAT m_TweenTime;
    FLOAT m_fBeginPct;
    FLOAT m_fEndPct;
    class AActor* m_AttachActor;
    FName m_Sequence;
    FName m_PawnTag;
    FStringNoInit m_StaticMeshTag;
    void eventAnimFinished()
    {
        ProcessEvent(FindFunctionChecked(R6ENGINE_AnimFinished),NULL);
    }
    DECLARE_CLASS(UR6PlayAnim,UObject,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(UR6PlayAnim)
};


class R6ENGINE_API UR6MatineeAttach : public UObject
{
public:
    BITFIELD m_bInitialized:1 GCC_PACK(4);
    class AActor* m_AttachActor GCC_PACK(4);
    class AR6Pawn* m_AttachPawn;
    FName m_PawnTag;
    FName m_BoneName;
    FVector m_InteractionPos;
    FRotator m_InteractionRot;
    FVector m_OffsetPos;
    FRotator m_OffsetRot;
    FStringNoInit m_StaticMeshTag;
    DECLARE_FUNCTION(execTestLocation);
    DECLARE_FUNCTION(execGetBoneInformation);
    DECLARE_CLASS(UR6MatineeAttach,UObject,0,R6Engine)
    NO_DEFAULT_CONSTRUCTOR(UR6MatineeAttach)
};

#endif

AUTOGENERATE_FUNCTION(UR6MatineeAttach,2908,execTestLocation);
AUTOGENERATE_FUNCTION(UR6MatineeAttach,2907,execGetBoneInformation);
AUTOGENERATE_FUNCTION(AR6IORotatingDoor,2019,execRemoveBreach);
AUTOGENERATE_FUNCTION(AR6IORotatingDoor,2018,execAddBreach);
AUTOGENERATE_FUNCTION(AR6IORotatingDoor,1511,execWillOpenOnTouch);
AUTOGENERATE_FUNCTION(UR6TerroristMgr,1826,execFindNearestZoneForHostage);
AUTOGENERATE_FUNCTION(UR6TerroristMgr,1825,execInit);
AUTOGENERATE_FUNCTION(AR6DeploymentZone,1838,execGetClosestHostage);
AUTOGENERATE_FUNCTION(AR6DeploymentZone,1837,execOrderTerroListFromDistanceTo);
AUTOGENERATE_FUNCTION(AR6DeploymentZone,1836,execAddHostage);
AUTOGENERATE_FUNCTION(AR6DeploymentZone,1835,execHaveHostage);
AUTOGENERATE_FUNCTION(AR6DeploymentZone,1834,execHaveTerrorist);
AUTOGENERATE_FUNCTION(AR6DeploymentZone,1833,execFindClosestPointTo);
AUTOGENERATE_FUNCTION(AR6DeploymentZone,1832,execIsPointInZone);
AUTOGENERATE_FUNCTION(AR6DeploymentZone,1831,execFindRandomPointInArea);
AUTOGENERATE_FUNCTION(AR6DeploymentZone,1830,execFirstInit);
AUTOGENERATE_FUNCTION(AR6Pawn,2731,execSetAudioInfo);
AUTOGENERATE_FUNCTION(AR6Pawn,2730,execPlayVoices);
AUTOGENERATE_FUNCTION(AR6Pawn,2729,execSendPlaySound);
AUTOGENERATE_FUNCTION(AR6Pawn,1845,execPawnCanBeHurtFrom);
AUTOGENERATE_FUNCTION(AR6Pawn,1842,execGetRotationOffset);
AUTOGENERATE_FUNCTION(AR6Pawn,1841,execR6GetViewRotation);
AUTOGENERATE_FUNCTION(AR6Pawn,2218,execUpdatePawnTrackActor);
AUTOGENERATE_FUNCTION(AR6Pawn,2217,execPawnTrackActor);
AUTOGENERATE_FUNCTION(AR6Pawn,2216,execPawnLookAt);
AUTOGENERATE_FUNCTION(AR6Pawn,2215,execPawnLookAbsolute);
AUTOGENERATE_FUNCTION(AR6Pawn,2214,execPawnLook);
AUTOGENERATE_FUNCTION(AR6Pawn,1844,execFootStep);
AUTOGENERATE_FUNCTION(AR6Pawn,1846,execMoveHitBone);
AUTOGENERATE_FUNCTION(AR6Pawn,1603,execStopLipSynch);
AUTOGENERATE_FUNCTION(AR6Pawn,2611,execStartLipSynch);
AUTOGENERATE_FUNCTION(AR6Pawn,1517,execGetMovementDirection);
AUTOGENERATE_FUNCTION(AR6Pawn,1512,execGetMaxRotationOffset);
AUTOGENERATE_FUNCTION(AR6Pawn,1508,execGetPeekingRatioNorm);
AUTOGENERATE_FUNCTION(AR6Pawn,1507,execCheckCylinderTranslation);
AUTOGENERATE_FUNCTION(AR6Pawn,2212,execSetPawnScale);
AUTOGENERATE_FUNCTION(AR6Pawn,2200,execAdjustFluidCollisionCylinder);
AUTOGENERATE_FUNCTION(AR6Pawn,2605,execToggleScopeProperties);
AUTOGENERATE_FUNCTION(AR6Pawn,2600,execToggleNightProperties);
AUTOGENERATE_FUNCTION(AR6Pawn,2004,execToggleHeatProperties);
AUTOGENERATE_FUNCTION(AR6Pawn,2006,execGetThroughResult);
AUTOGENERATE_FUNCTION(AR6Pawn,2003,execGetStunResult);
AUTOGENERATE_FUNCTION(AR6Pawn,2002,execGetKillResult);
AUTOGENERATE_FUNCTION(AR6AIController,2220,execActorReachableFromLocation);
AUTOGENERATE_FUNCTION(AR6AIController,2209,execFindNearbyWaitSpot);
AUTOGENERATE_FUNCTION(AR6AIController,1510,execGotoOpenDoorState);
AUTOGENERATE_FUNCTION(AR6AIController,1509,execNeedToOpenDoor);
AUTOGENERATE_FUNCTION(AR6AIController,1816,execFindGrenadeDirectionToHitActor);
AUTOGENERATE_FUNCTION(AR6AIController,1815,execCanWalkTo);
AUTOGENERATE_FUNCTION(AR6AIController,1814,execFollowPathTo);
AUTOGENERATE_FUNCTION(AR6AIController,1812,execFollowPath);
AUTOGENERATE_FUNCTION(AR6AIController,2201,execMoveToPosition);
AUTOGENERATE_FUNCTION(AR6AIController,1813,execPickActorAdjust);
AUTOGENERATE_FUNCTION(AR6AIController,1818,execFindInvestigationPoint);
AUTOGENERATE_FUNCTION(AR6AIController,1817,execFindPlaceToFire);
AUTOGENERATE_FUNCTION(AR6AIController,1811,execFindPlaceToTakeCover);
AUTOGENERATE_FUNCTION(AR6AIController,1810,execMakePathToRun);
AUTOGENERATE_FUNCTION(AR6TerroristAI,1829,execIsAttackSpotStillValid);
AUTOGENERATE_FUNCTION(AR6TerroristAI,1828,execCallVisibleTerrorist);
AUTOGENERATE_FUNCTION(AR6TerroristAI,1827,execHaveAClearShot);
AUTOGENERATE_FUNCTION(AR6TerroristAI,1824,execFindBetterShotLocation);
AUTOGENERATE_FUNCTION(AR6TerroristAI,1822,execMakeBackupList);
AUTOGENERATE_FUNCTION(AR6TerroristAI,1823,execCallBackupForInvestigation);
AUTOGENERATE_FUNCTION(AR6TerroristAI,1821,execCallBackupForAttack);
AUTOGENERATE_FUNCTION(AR6TerroristAI,1820,execGetNextRandomNode);
AUTOGENERATE_FUNCTION(AR6RainbowAI,2223,execClearToSnipe);
AUTOGENERATE_FUNCTION(AR6RainbowAI,2222,execAClearShotIsAvailable);
AUTOGENERATE_FUNCTION(AR6RainbowAI,2221,execFindSafeSpot);
AUTOGENERATE_FUNCTION(AR6RainbowAI,2219,execLookAroundRoom);
AUTOGENERATE_FUNCTION(AR6RainbowAI,2207,execSetOrientation);
AUTOGENERATE_FUNCTION(AR6RainbowAI,2206,execCheckEnvironment);
AUTOGENERATE_FUNCTION(AR6RainbowAI,2205,execGetEntryPosition);
AUTOGENERATE_FUNCTION(AR6RainbowAI,2204,execGetGuardPosition);
AUTOGENERATE_FUNCTION(AR6RainbowAI,2203,execGetLadderPosition);
AUTOGENERATE_FUNCTION(AR6RainbowAI,2202,execGetTargetPosition);
AUTOGENERATE_FUNCTION(AR6PlayerController,2726,execPlayVoicesPriority);
AUTOGENERATE_FUNCTION(AR6PlayerController,1521,execGetLocStringWithActionKey);
AUTOGENERATE_FUNCTION(AR6PlayerController,2724,execLocalizeTraining);
AUTOGENERATE_FUNCTION(AR6PlayerController,1224,execFindPlayer);
AUTOGENERATE_FUNCTION(AR6PlayerController,1840,execDebugFunction);
AUTOGENERATE_FUNCTION(AR6PlayerController,2213,execUpdateSpectatorReticule);
AUTOGENERATE_FUNCTION(AR6PlayerController,1843,execUpdateReticule);
AUTOGENERATE_FUNCTION(AR6PlayerController,2211,execUpdateCircumstantialAction);
AUTOGENERATE_FUNCTION(AR6SoundReplicationInfo,3000,execPlayLocalWeaponSound);
AUTOGENERATE_FUNCTION(AR6SoundReplicationInfo,2728,execStopWeaponSound);
AUTOGENERATE_FUNCTION(AR6SoundReplicationInfo,2727,execPlayWeaponSound);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif
